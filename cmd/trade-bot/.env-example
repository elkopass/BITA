# Use this environment variables as a configuration template and example

# >> GLOBAL PARAMETERS <<

## array if figi's separated by comma
TRADEBOT_FIGI=<figi1>,<figi2>
## set to false if you are ready to use bot in production
TRADEBOT_IS_SANDBOX=true
## (required) token obtained from https://www.tinkoff.ru/invest/settings/
TRADEBOT_TOKEN=<your_api_token>
## (required) which account should this bot use
TRADEBOT_ACCOUNT_ID=<your_account_id>

## runtime environment; possible values: DEV, TEST, PROD
# TRADEBOT_ENV=UNSPECIFIED
## trading strategy; possible values: gamble, crumble, tumble
# TRADEBOT_STRATEGY=gamble
## if true, bot will set sell orders for market price on interrupt signal
# TRADEBOT_SELL_ON_EXIT=false
## logging level; possible values: DEBUG, INFO, WARN, ERROR
# TRADEBOT_LOG_LEVEL=INFO


# >> METRICS SETUP <<

## if true, bot will export prometheus metrics
# METRICS_ENABLED=true
## address and port to bind HTTP server
# METRICS_ADDR=:8080
## URL on which metrics will be available
# METRICS_ENDPOINT=/metrics


# >> GAMBLE STRATEGY (TREND BASED) <<

## how many assets bot need to buy each time, one by default
# GAMBLE_STRATEGY_LOTS_TO_BUY=1
## threshold when the stop loss order should be placed (default: -3%)
# GAMBLE_STRATEGY_STOP_LOSS_COEF=0.97
## threshold when the take profit order should be placed (default: +2%)
# GAMBLE_STRATEGY_TAKE_PROFIT_COEF=1.02
## K coef for long trend when it's OK to start trading; trend is a func(x) = Kx + b
# GAMBLE_STRATEGY_LONG_TREND_TO_TRADE=0.05
## K coef for short trend when it's OK to start trading; trend is a func(x) = Kx + b
# GAMBLE_STRATEGY_SHORT_TREND_TO_TRADE=0.1
## interval for long trend calculation in seconds
# GAMBLE_STRATEGY_LONG_TREND_INTERVAL_SECONDS=86400
## interval for short trend calculation in seconds
# GAMBLE_STRATEGY_SHORT_TREND_INTERVAL_SECONDS=3600
## time intervals before next check of instrument price or order status
# GAMBLE_STRATEGY_WORKER_SLEEP_DURATION_SECONDS=30
## how many seconds should be passed to cancel an buy/sell order
# GAMBLE_STRATEGY_SECONDS_TO_CANCEL_ORDER=3600


# >> CRUMBLE STRATEGY (MOVING AVERAGE BASED) <<

## how many assets bot need to buy each time, one by default
# CRUMBLE_STRATEGY_LOTS_TO_BUY=1
## threshold when the stop loss order should be placed (default: -5%)
# CRUMBLE_STRATEGY_STOP_LOSS_COEF=0.95
## threshold when the take profit order should be placed (default: +5%)
# CRUMBLE_STRATEGY_TAKE_PROFIT_COEF=1.05
## short (small) window for moving average to be calculated
# CRUMBLE_STRATEGY_SHORT_WINDOW=25
## long (big) window for moving average to be calculated
# CRUMBLE_STRATEGY_LONG_WINDOW=50
## historic candles time interval; value between CRUMBLE_STRATEGY_LONG_WINDOW and 168 (7 days)
# CRUMBLE_STRATEGY_CANDLES_INTERVAL_HOURS=144
## time intervals before next check of instrument price or order status
# CRUMBLE_STRATEGY_WORKER_SLEEP_DURATION_SECONDS=30
## how many seconds should be passed to cancel an buy/sell order
# CRUMBLE_STRATEGY_SECONDS_TO_CANCEL_ORDER=3600


# >> TUMBLE STRATEGY (ORDER BOOK BASED) <<
# >>  not stable, still in development  <<

## how many assets bot need to buy each time, one by default
# TUMBLE_STRATEGY_LOTS_TO_BUY=1
## minimal (asks / bids) ratio in latest order book to create "sell" order
# TUMBLE_STRATEGY_ASKS_BIDS_RATIO=1.5
## minimal (bids / asks) ratio in latest order book to create "buy" order
# TUMBLE_STRATEGY_BIDS_ASKS_RATIO=1.5
## requested order book depth
# TUMBLE_STRATEGY_ORDER_BOOK_DEPTH=10
