// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marketdata.proto

package investapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Тип операции со списком подписок.
type SubscriptionAction int32

const (
	SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED SubscriptionAction = 0
	SubscriptionAction_SUBSCRIPTION_ACTION_SUBSCRIBE   SubscriptionAction = 1
	SubscriptionAction_SUBSCRIPTION_ACTION_UNSUBSCRIBE SubscriptionAction = 2
)

var SubscriptionAction_name = map[int32]string{
	0: "SUBSCRIPTION_ACTION_UNSPECIFIED",
	1: "SUBSCRIPTION_ACTION_SUBSCRIBE",
	2: "SUBSCRIPTION_ACTION_UNSUBSCRIBE",
}

var SubscriptionAction_value = map[string]int32{
	"SUBSCRIPTION_ACTION_UNSPECIFIED": 0,
	"SUBSCRIPTION_ACTION_SUBSCRIBE":   1,
	"SUBSCRIPTION_ACTION_UNSUBSCRIBE": 2,
}

func (x SubscriptionAction) String() string {
	return proto.EnumName(SubscriptionAction_name, int32(x))
}

func (SubscriptionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{0}
}

//Интервал свечи.
type SubscriptionInterval int32

const (
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED  SubscriptionInterval = 0
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_ONE_MINUTE   SubscriptionInterval = 1
	SubscriptionInterval_SUBSCRIPTION_INTERVAL_FIVE_MINUTES SubscriptionInterval = 2
)

var SubscriptionInterval_name = map[int32]string{
	0: "SUBSCRIPTION_INTERVAL_UNSPECIFIED",
	1: "SUBSCRIPTION_INTERVAL_ONE_MINUTE",
	2: "SUBSCRIPTION_INTERVAL_FIVE_MINUTES",
}

var SubscriptionInterval_value = map[string]int32{
	"SUBSCRIPTION_INTERVAL_UNSPECIFIED":  0,
	"SUBSCRIPTION_INTERVAL_ONE_MINUTE":   1,
	"SUBSCRIPTION_INTERVAL_FIVE_MINUTES": 2,
}

func (x SubscriptionInterval) String() string {
	return proto.EnumName(SubscriptionInterval_name, int32(x))
}

func (SubscriptionInterval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{1}
}

//Результат подписки.
type SubscriptionStatus int32

const (
	SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED                    SubscriptionStatus = 0
	SubscriptionStatus_SUBSCRIPTION_STATUS_SUCCESS                        SubscriptionStatus = 1
	SubscriptionStatus_SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND           SubscriptionStatus = 2
	SubscriptionStatus_SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID SubscriptionStatus = 3
	SubscriptionStatus_SUBSCRIPTION_STATUS_DEPTH_IS_INVALID               SubscriptionStatus = 4
	SubscriptionStatus_SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID            SubscriptionStatus = 5
	SubscriptionStatus_SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED              SubscriptionStatus = 6
	SubscriptionStatus_SUBSCRIPTION_STATUS_INTERNAL_ERROR                 SubscriptionStatus = 7
)

var SubscriptionStatus_name = map[int32]string{
	0: "SUBSCRIPTION_STATUS_UNSPECIFIED",
	1: "SUBSCRIPTION_STATUS_SUCCESS",
	2: "SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND",
	3: "SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID",
	4: "SUBSCRIPTION_STATUS_DEPTH_IS_INVALID",
	5: "SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID",
	6: "SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED",
	7: "SUBSCRIPTION_STATUS_INTERNAL_ERROR",
}

var SubscriptionStatus_value = map[string]int32{
	"SUBSCRIPTION_STATUS_UNSPECIFIED":                    0,
	"SUBSCRIPTION_STATUS_SUCCESS":                        1,
	"SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND":           2,
	"SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID": 3,
	"SUBSCRIPTION_STATUS_DEPTH_IS_INVALID":               4,
	"SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID":            5,
	"SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED":              6,
	"SUBSCRIPTION_STATUS_INTERNAL_ERROR":                 7,
}

func (x SubscriptionStatus) String() string {
	return proto.EnumName(SubscriptionStatus_name, int32(x))
}

func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{2}
}

//Направление сделки.
type TradeDirection int32

const (
	TradeDirection_TRADE_DIRECTION_UNSPECIFIED TradeDirection = 0
	TradeDirection_TRADE_DIRECTION_BUY         TradeDirection = 1
	TradeDirection_TRADE_DIRECTION_SELL        TradeDirection = 2
)

var TradeDirection_name = map[int32]string{
	0: "TRADE_DIRECTION_UNSPECIFIED",
	1: "TRADE_DIRECTION_BUY",
	2: "TRADE_DIRECTION_SELL",
}

var TradeDirection_value = map[string]int32{
	"TRADE_DIRECTION_UNSPECIFIED": 0,
	"TRADE_DIRECTION_BUY":         1,
	"TRADE_DIRECTION_SELL":        2,
}

func (x TradeDirection) String() string {
	return proto.EnumName(TradeDirection_name, int32(x))
}

func (TradeDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{3}
}

//Интервал свечей.
type CandleInterval int32

const (
	CandleInterval_CANDLE_INTERVAL_UNSPECIFIED CandleInterval = 0
	CandleInterval_CANDLE_INTERVAL_1_MIN       CandleInterval = 1
	CandleInterval_CANDLE_INTERVAL_5_MIN       CandleInterval = 2
	CandleInterval_CANDLE_INTERVAL_15_MIN      CandleInterval = 3
	CandleInterval_CANDLE_INTERVAL_HOUR        CandleInterval = 4
	CandleInterval_CANDLE_INTERVAL_DAY         CandleInterval = 5
)

var CandleInterval_name = map[int32]string{
	0: "CANDLE_INTERVAL_UNSPECIFIED",
	1: "CANDLE_INTERVAL_1_MIN",
	2: "CANDLE_INTERVAL_5_MIN",
	3: "CANDLE_INTERVAL_15_MIN",
	4: "CANDLE_INTERVAL_HOUR",
	5: "CANDLE_INTERVAL_DAY",
}

var CandleInterval_value = map[string]int32{
	"CANDLE_INTERVAL_UNSPECIFIED": 0,
	"CANDLE_INTERVAL_1_MIN":       1,
	"CANDLE_INTERVAL_5_MIN":       2,
	"CANDLE_INTERVAL_15_MIN":      3,
	"CANDLE_INTERVAL_HOUR":        4,
	"CANDLE_INTERVAL_DAY":         5,
}

func (x CandleInterval) String() string {
	return proto.EnumName(CandleInterval_name, int32(x))
}

func (CandleInterval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{4}
}

//Запрос подписки или отписки на определённые биржевые данные.
type MarketDataRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*MarketDataRequest_SubscribeCandlesRequest
	//	*MarketDataRequest_SubscribeOrderBookRequest
	//	*MarketDataRequest_SubscribeTradesRequest
	//	*MarketDataRequest_SubscribeInfoRequest
	//	*MarketDataRequest_SubscribeLastPriceRequest
	Payload              isMarketDataRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MarketDataRequest) Reset()         { *m = MarketDataRequest{} }
func (m *MarketDataRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDataRequest) ProtoMessage()    {}
func (*MarketDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{0}
}

func (m *MarketDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataRequest.Unmarshal(m, b)
}
func (m *MarketDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataRequest.Marshal(b, m, deterministic)
}
func (m *MarketDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataRequest.Merge(m, src)
}
func (m *MarketDataRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDataRequest.Size(m)
}
func (m *MarketDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataRequest proto.InternalMessageInfo

type isMarketDataRequest_Payload interface {
	isMarketDataRequest_Payload()
}

type MarketDataRequest_SubscribeCandlesRequest struct {
	SubscribeCandlesRequest *SubscribeCandlesRequest `protobuf:"bytes,1,opt,name=subscribe_candles_request,json=subscribeCandlesRequest,proto3,oneof"`
}

type MarketDataRequest_SubscribeOrderBookRequest struct {
	SubscribeOrderBookRequest *SubscribeOrderBookRequest `protobuf:"bytes,2,opt,name=subscribe_order_book_request,json=subscribeOrderBookRequest,proto3,oneof"`
}

type MarketDataRequest_SubscribeTradesRequest struct {
	SubscribeTradesRequest *SubscribeTradesRequest `protobuf:"bytes,3,opt,name=subscribe_trades_request,json=subscribeTradesRequest,proto3,oneof"`
}

type MarketDataRequest_SubscribeInfoRequest struct {
	SubscribeInfoRequest *SubscribeInfoRequest `protobuf:"bytes,4,opt,name=subscribe_info_request,json=subscribeInfoRequest,proto3,oneof"`
}

type MarketDataRequest_SubscribeLastPriceRequest struct {
	SubscribeLastPriceRequest *SubscribeLastPriceRequest `protobuf:"bytes,5,opt,name=subscribe_last_price_request,json=subscribeLastPriceRequest,proto3,oneof"`
}

func (*MarketDataRequest_SubscribeCandlesRequest) isMarketDataRequest_Payload() {}

func (*MarketDataRequest_SubscribeOrderBookRequest) isMarketDataRequest_Payload() {}

func (*MarketDataRequest_SubscribeTradesRequest) isMarketDataRequest_Payload() {}

func (*MarketDataRequest_SubscribeInfoRequest) isMarketDataRequest_Payload() {}

func (*MarketDataRequest_SubscribeLastPriceRequest) isMarketDataRequest_Payload() {}

func (m *MarketDataRequest) GetPayload() isMarketDataRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MarketDataRequest) GetSubscribeCandlesRequest() *SubscribeCandlesRequest {
	if x, ok := m.GetPayload().(*MarketDataRequest_SubscribeCandlesRequest); ok {
		return x.SubscribeCandlesRequest
	}
	return nil
}

func (m *MarketDataRequest) GetSubscribeOrderBookRequest() *SubscribeOrderBookRequest {
	if x, ok := m.GetPayload().(*MarketDataRequest_SubscribeOrderBookRequest); ok {
		return x.SubscribeOrderBookRequest
	}
	return nil
}

func (m *MarketDataRequest) GetSubscribeTradesRequest() *SubscribeTradesRequest {
	if x, ok := m.GetPayload().(*MarketDataRequest_SubscribeTradesRequest); ok {
		return x.SubscribeTradesRequest
	}
	return nil
}

func (m *MarketDataRequest) GetSubscribeInfoRequest() *SubscribeInfoRequest {
	if x, ok := m.GetPayload().(*MarketDataRequest_SubscribeInfoRequest); ok {
		return x.SubscribeInfoRequest
	}
	return nil
}

func (m *MarketDataRequest) GetSubscribeLastPriceRequest() *SubscribeLastPriceRequest {
	if x, ok := m.GetPayload().(*MarketDataRequest_SubscribeLastPriceRequest); ok {
		return x.SubscribeLastPriceRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MarketDataRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MarketDataRequest_SubscribeCandlesRequest)(nil),
		(*MarketDataRequest_SubscribeOrderBookRequest)(nil),
		(*MarketDataRequest_SubscribeTradesRequest)(nil),
		(*MarketDataRequest_SubscribeInfoRequest)(nil),
		(*MarketDataRequest_SubscribeLastPriceRequest)(nil),
	}
}

//Пакет биржевой информации по подписке.
type MarketDataResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*MarketDataResponse_SubscribeCandlesResponse
	//	*MarketDataResponse_SubscribeOrderBookResponse
	//	*MarketDataResponse_SubscribeTradesResponse
	//	*MarketDataResponse_SubscribeInfoResponse
	//	*MarketDataResponse_Candle
	//	*MarketDataResponse_Trade
	//	*MarketDataResponse_Orderbook
	//	*MarketDataResponse_TradingStatus
	//	*MarketDataResponse_Ping
	//	*MarketDataResponse_SubscribeLastPriceResponse
	//	*MarketDataResponse_LastPrice
	Payload              isMarketDataResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *MarketDataResponse) Reset()         { *m = MarketDataResponse{} }
func (m *MarketDataResponse) String() string { return proto.CompactTextString(m) }
func (*MarketDataResponse) ProtoMessage()    {}
func (*MarketDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{1}
}

func (m *MarketDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataResponse.Unmarshal(m, b)
}
func (m *MarketDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataResponse.Marshal(b, m, deterministic)
}
func (m *MarketDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataResponse.Merge(m, src)
}
func (m *MarketDataResponse) XXX_Size() int {
	return xxx_messageInfo_MarketDataResponse.Size(m)
}
func (m *MarketDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataResponse proto.InternalMessageInfo

type isMarketDataResponse_Payload interface {
	isMarketDataResponse_Payload()
}

type MarketDataResponse_SubscribeCandlesResponse struct {
	SubscribeCandlesResponse *SubscribeCandlesResponse `protobuf:"bytes,1,opt,name=subscribe_candles_response,json=subscribeCandlesResponse,proto3,oneof"`
}

type MarketDataResponse_SubscribeOrderBookResponse struct {
	SubscribeOrderBookResponse *SubscribeOrderBookResponse `protobuf:"bytes,2,opt,name=subscribe_order_book_response,json=subscribeOrderBookResponse,proto3,oneof"`
}

type MarketDataResponse_SubscribeTradesResponse struct {
	SubscribeTradesResponse *SubscribeTradesResponse `protobuf:"bytes,3,opt,name=subscribe_trades_response,json=subscribeTradesResponse,proto3,oneof"`
}

type MarketDataResponse_SubscribeInfoResponse struct {
	SubscribeInfoResponse *SubscribeInfoResponse `protobuf:"bytes,4,opt,name=subscribe_info_response,json=subscribeInfoResponse,proto3,oneof"`
}

type MarketDataResponse_Candle struct {
	Candle *Candle `protobuf:"bytes,5,opt,name=candle,proto3,oneof"`
}

type MarketDataResponse_Trade struct {
	Trade *Trade `protobuf:"bytes,6,opt,name=trade,proto3,oneof"`
}

type MarketDataResponse_Orderbook struct {
	Orderbook *OrderBook `protobuf:"bytes,7,opt,name=orderbook,proto3,oneof"`
}

type MarketDataResponse_TradingStatus struct {
	TradingStatus *TradingStatus `protobuf:"bytes,8,opt,name=trading_status,json=tradingStatus,proto3,oneof"`
}

type MarketDataResponse_Ping struct {
	Ping *Ping `protobuf:"bytes,9,opt,name=ping,proto3,oneof"`
}

type MarketDataResponse_SubscribeLastPriceResponse struct {
	SubscribeLastPriceResponse *SubscribeLastPriceResponse `protobuf:"bytes,10,opt,name=subscribe_last_price_response,json=subscribeLastPriceResponse,proto3,oneof"`
}

type MarketDataResponse_LastPrice struct {
	LastPrice *LastPrice `protobuf:"bytes,11,opt,name=last_price,json=lastPrice,proto3,oneof"`
}

func (*MarketDataResponse_SubscribeCandlesResponse) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_SubscribeOrderBookResponse) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_SubscribeTradesResponse) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_SubscribeInfoResponse) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_Candle) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_Trade) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_Orderbook) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_TradingStatus) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_Ping) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_SubscribeLastPriceResponse) isMarketDataResponse_Payload() {}

func (*MarketDataResponse_LastPrice) isMarketDataResponse_Payload() {}

func (m *MarketDataResponse) GetPayload() isMarketDataResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MarketDataResponse) GetSubscribeCandlesResponse() *SubscribeCandlesResponse {
	if x, ok := m.GetPayload().(*MarketDataResponse_SubscribeCandlesResponse); ok {
		return x.SubscribeCandlesResponse
	}
	return nil
}

func (m *MarketDataResponse) GetSubscribeOrderBookResponse() *SubscribeOrderBookResponse {
	if x, ok := m.GetPayload().(*MarketDataResponse_SubscribeOrderBookResponse); ok {
		return x.SubscribeOrderBookResponse
	}
	return nil
}

func (m *MarketDataResponse) GetSubscribeTradesResponse() *SubscribeTradesResponse {
	if x, ok := m.GetPayload().(*MarketDataResponse_SubscribeTradesResponse); ok {
		return x.SubscribeTradesResponse
	}
	return nil
}

func (m *MarketDataResponse) GetSubscribeInfoResponse() *SubscribeInfoResponse {
	if x, ok := m.GetPayload().(*MarketDataResponse_SubscribeInfoResponse); ok {
		return x.SubscribeInfoResponse
	}
	return nil
}

func (m *MarketDataResponse) GetCandle() *Candle {
	if x, ok := m.GetPayload().(*MarketDataResponse_Candle); ok {
		return x.Candle
	}
	return nil
}

func (m *MarketDataResponse) GetTrade() *Trade {
	if x, ok := m.GetPayload().(*MarketDataResponse_Trade); ok {
		return x.Trade
	}
	return nil
}

func (m *MarketDataResponse) GetOrderbook() *OrderBook {
	if x, ok := m.GetPayload().(*MarketDataResponse_Orderbook); ok {
		return x.Orderbook
	}
	return nil
}

func (m *MarketDataResponse) GetTradingStatus() *TradingStatus {
	if x, ok := m.GetPayload().(*MarketDataResponse_TradingStatus); ok {
		return x.TradingStatus
	}
	return nil
}

func (m *MarketDataResponse) GetPing() *Ping {
	if x, ok := m.GetPayload().(*MarketDataResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *MarketDataResponse) GetSubscribeLastPriceResponse() *SubscribeLastPriceResponse {
	if x, ok := m.GetPayload().(*MarketDataResponse_SubscribeLastPriceResponse); ok {
		return x.SubscribeLastPriceResponse
	}
	return nil
}

func (m *MarketDataResponse) GetLastPrice() *LastPrice {
	if x, ok := m.GetPayload().(*MarketDataResponse_LastPrice); ok {
		return x.LastPrice
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MarketDataResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MarketDataResponse_SubscribeCandlesResponse)(nil),
		(*MarketDataResponse_SubscribeOrderBookResponse)(nil),
		(*MarketDataResponse_SubscribeTradesResponse)(nil),
		(*MarketDataResponse_SubscribeInfoResponse)(nil),
		(*MarketDataResponse_Candle)(nil),
		(*MarketDataResponse_Trade)(nil),
		(*MarketDataResponse_Orderbook)(nil),
		(*MarketDataResponse_TradingStatus)(nil),
		(*MarketDataResponse_Ping)(nil),
		(*MarketDataResponse_SubscribeLastPriceResponse)(nil),
		(*MarketDataResponse_LastPrice)(nil),
	}
}

// subscribeCandles | Изменения статуса подписки на свечи.
type SubscribeCandlesRequest struct {
	SubscriptionAction   SubscriptionAction  `protobuf:"varint,1,opt,name=subscription_action,json=subscriptionAction,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionAction" json:"subscription_action,omitempty"`
	Instruments          []*CandleInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeCandlesRequest) Reset()         { *m = SubscribeCandlesRequest{} }
func (m *SubscribeCandlesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeCandlesRequest) ProtoMessage()    {}
func (*SubscribeCandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{2}
}

func (m *SubscribeCandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCandlesRequest.Unmarshal(m, b)
}
func (m *SubscribeCandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCandlesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeCandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCandlesRequest.Merge(m, src)
}
func (m *SubscribeCandlesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeCandlesRequest.Size(m)
}
func (m *SubscribeCandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCandlesRequest proto.InternalMessageInfo

func (m *SubscribeCandlesRequest) GetSubscriptionAction() SubscriptionAction {
	if m != nil {
		return m.SubscriptionAction
	}
	return SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED
}

func (m *SubscribeCandlesRequest) GetInstruments() []*CandleInstrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

//Запрос изменения статус подписки на свечи.
type CandleInstrument struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Interval             SubscriptionInterval `protobuf:"varint,2,opt,name=gamble,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionInterval" json:"gamble,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CandleInstrument) Reset()         { *m = CandleInstrument{} }
func (m *CandleInstrument) String() string { return proto.CompactTextString(m) }
func (*CandleInstrument) ProtoMessage()    {}
func (*CandleInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{3}
}

func (m *CandleInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleInstrument.Unmarshal(m, b)
}
func (m *CandleInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleInstrument.Marshal(b, m, deterministic)
}
func (m *CandleInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleInstrument.Merge(m, src)
}
func (m *CandleInstrument) XXX_Size() int {
	return xxx_messageInfo_CandleInstrument.Size(m)
}
func (m *CandleInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_CandleInstrument proto.InternalMessageInfo

func (m *CandleInstrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *CandleInstrument) GetInterval() SubscriptionInterval {
	if m != nil {
		return m.Interval
	}
	return SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED
}

//Результат изменения статус подписки на свечи.
type SubscribeCandlesResponse struct {
	TrackingId           string                `protobuf:"bytes,1,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	CandlesSubscriptions []*CandleSubscription `protobuf:"bytes,2,rep,name=candles_subscriptions,json=candlesSubscriptions,proto3" json:"candles_subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SubscribeCandlesResponse) Reset()         { *m = SubscribeCandlesResponse{} }
func (m *SubscribeCandlesResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeCandlesResponse) ProtoMessage()    {}
func (*SubscribeCandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{4}
}

func (m *SubscribeCandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCandlesResponse.Unmarshal(m, b)
}
func (m *SubscribeCandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCandlesResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeCandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCandlesResponse.Merge(m, src)
}
func (m *SubscribeCandlesResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeCandlesResponse.Size(m)
}
func (m *SubscribeCandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCandlesResponse proto.InternalMessageInfo

func (m *SubscribeCandlesResponse) GetTrackingId() string {
	if m != nil {
		return m.TrackingId
	}
	return ""
}

func (m *SubscribeCandlesResponse) GetCandlesSubscriptions() []*CandleSubscription {
	if m != nil {
		return m.CandlesSubscriptions
	}
	return nil
}

//Статус подписки на свечи.
type CandleSubscription struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Interval             SubscriptionInterval `protobuf:"varint,2,opt,name=gamble,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionInterval" json:"gamble,omitempty"`
	SubscriptionStatus   SubscriptionStatus   `protobuf:"varint,3,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionStatus" json:"subscription_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CandleSubscription) Reset()         { *m = CandleSubscription{} }
func (m *CandleSubscription) String() string { return proto.CompactTextString(m) }
func (*CandleSubscription) ProtoMessage()    {}
func (*CandleSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{5}
}

func (m *CandleSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleSubscription.Unmarshal(m, b)
}
func (m *CandleSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleSubscription.Marshal(b, m, deterministic)
}
func (m *CandleSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleSubscription.Merge(m, src)
}
func (m *CandleSubscription) XXX_Size() int {
	return xxx_messageInfo_CandleSubscription.Size(m)
}
func (m *CandleSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_CandleSubscription proto.InternalMessageInfo

func (m *CandleSubscription) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *CandleSubscription) GetInterval() SubscriptionInterval {
	if m != nil {
		return m.Interval
	}
	return SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED
}

func (m *CandleSubscription) GetSubscriptionStatus() SubscriptionStatus {
	if m != nil {
		return m.SubscriptionStatus
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

//Запрос на изменение статуса подписки на стаканы.
type SubscribeOrderBookRequest struct {
	SubscriptionAction   SubscriptionAction     `protobuf:"varint,1,opt,name=subscription_action,json=subscriptionAction,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionAction" json:"subscription_action,omitempty"`
	Instruments          []*OrderBookInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SubscribeOrderBookRequest) Reset()         { *m = SubscribeOrderBookRequest{} }
func (m *SubscribeOrderBookRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeOrderBookRequest) ProtoMessage()    {}
func (*SubscribeOrderBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{6}
}

func (m *SubscribeOrderBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeOrderBookRequest.Unmarshal(m, b)
}
func (m *SubscribeOrderBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeOrderBookRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeOrderBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeOrderBookRequest.Merge(m, src)
}
func (m *SubscribeOrderBookRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeOrderBookRequest.Size(m)
}
func (m *SubscribeOrderBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeOrderBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeOrderBookRequest proto.InternalMessageInfo

func (m *SubscribeOrderBookRequest) GetSubscriptionAction() SubscriptionAction {
	if m != nil {
		return m.SubscriptionAction
	}
	return SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED
}

func (m *SubscribeOrderBookRequest) GetInstruments() []*OrderBookInstrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

//Запрос подписки на стаканы.
type OrderBookInstrument struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Depth                int32    `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderBookInstrument) Reset()         { *m = OrderBookInstrument{} }
func (m *OrderBookInstrument) String() string { return proto.CompactTextString(m) }
func (*OrderBookInstrument) ProtoMessage()    {}
func (*OrderBookInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{7}
}

func (m *OrderBookInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBookInstrument.Unmarshal(m, b)
}
func (m *OrderBookInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBookInstrument.Marshal(b, m, deterministic)
}
func (m *OrderBookInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBookInstrument.Merge(m, src)
}
func (m *OrderBookInstrument) XXX_Size() int {
	return xxx_messageInfo_OrderBookInstrument.Size(m)
}
func (m *OrderBookInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBookInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBookInstrument proto.InternalMessageInfo

func (m *OrderBookInstrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *OrderBookInstrument) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

//Результат изменения статуса подписки на стаканы.
type SubscribeOrderBookResponse struct {
	TrackingId             string                   `protobuf:"bytes,1,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	OrderBookSubscriptions []*OrderBookSubscription `protobuf:"bytes,2,rep,name=order_book_subscriptions,json=orderBookSubscriptions,proto3" json:"order_book_subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *SubscribeOrderBookResponse) Reset()         { *m = SubscribeOrderBookResponse{} }
func (m *SubscribeOrderBookResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeOrderBookResponse) ProtoMessage()    {}
func (*SubscribeOrderBookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{8}
}

func (m *SubscribeOrderBookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeOrderBookResponse.Unmarshal(m, b)
}
func (m *SubscribeOrderBookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeOrderBookResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeOrderBookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeOrderBookResponse.Merge(m, src)
}
func (m *SubscribeOrderBookResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeOrderBookResponse.Size(m)
}
func (m *SubscribeOrderBookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeOrderBookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeOrderBookResponse proto.InternalMessageInfo

func (m *SubscribeOrderBookResponse) GetTrackingId() string {
	if m != nil {
		return m.TrackingId
	}
	return ""
}

func (m *SubscribeOrderBookResponse) GetOrderBookSubscriptions() []*OrderBookSubscription {
	if m != nil {
		return m.OrderBookSubscriptions
	}
	return nil
}

//Статус подписки.
type OrderBookSubscription struct {
	Figi                 string             `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Depth                int32              `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	SubscriptionStatus   SubscriptionStatus `protobuf:"varint,3,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionStatus" json:"subscription_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OrderBookSubscription) Reset()         { *m = OrderBookSubscription{} }
func (m *OrderBookSubscription) String() string { return proto.CompactTextString(m) }
func (*OrderBookSubscription) ProtoMessage()    {}
func (*OrderBookSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{9}
}

func (m *OrderBookSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBookSubscription.Unmarshal(m, b)
}
func (m *OrderBookSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBookSubscription.Marshal(b, m, deterministic)
}
func (m *OrderBookSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBookSubscription.Merge(m, src)
}
func (m *OrderBookSubscription) XXX_Size() int {
	return xxx_messageInfo_OrderBookSubscription.Size(m)
}
func (m *OrderBookSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBookSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBookSubscription proto.InternalMessageInfo

func (m *OrderBookSubscription) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *OrderBookSubscription) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *OrderBookSubscription) GetSubscriptionStatus() SubscriptionStatus {
	if m != nil {
		return m.SubscriptionStatus
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

//Изменение статуса подписки на поток обезличенных сделок.
type SubscribeTradesRequest struct {
	SubscriptionAction   SubscriptionAction `protobuf:"varint,1,opt,name=subscription_action,json=subscriptionAction,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionAction" json:"subscription_action,omitempty"`
	Instruments          []*TradeInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubscribeTradesRequest) Reset()         { *m = SubscribeTradesRequest{} }
func (m *SubscribeTradesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeTradesRequest) ProtoMessage()    {}
func (*SubscribeTradesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{10}
}

func (m *SubscribeTradesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTradesRequest.Unmarshal(m, b)
}
func (m *SubscribeTradesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTradesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeTradesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTradesRequest.Merge(m, src)
}
func (m *SubscribeTradesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeTradesRequest.Size(m)
}
func (m *SubscribeTradesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTradesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTradesRequest proto.InternalMessageInfo

func (m *SubscribeTradesRequest) GetSubscriptionAction() SubscriptionAction {
	if m != nil {
		return m.SubscriptionAction
	}
	return SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED
}

func (m *SubscribeTradesRequest) GetInstruments() []*TradeInstrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

//Запрос подписки на поток обезличенных сделок.
type TradeInstrument struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeInstrument) Reset()         { *m = TradeInstrument{} }
func (m *TradeInstrument) String() string { return proto.CompactTextString(m) }
func (*TradeInstrument) ProtoMessage()    {}
func (*TradeInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{11}
}

func (m *TradeInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeInstrument.Unmarshal(m, b)
}
func (m *TradeInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeInstrument.Marshal(b, m, deterministic)
}
func (m *TradeInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeInstrument.Merge(m, src)
}
func (m *TradeInstrument) XXX_Size() int {
	return xxx_messageInfo_TradeInstrument.Size(m)
}
func (m *TradeInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_TradeInstrument proto.InternalMessageInfo

func (m *TradeInstrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

//Результат изменения статуса подписки на поток обезличенных сделок.
type SubscribeTradesResponse struct {
	TrackingId           string               `protobuf:"bytes,1,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	TradeSubscriptions   []*TradeSubscription `protobuf:"bytes,2,rep,name=trade_subscriptions,json=tradeSubscriptions,proto3" json:"trade_subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubscribeTradesResponse) Reset()         { *m = SubscribeTradesResponse{} }
func (m *SubscribeTradesResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeTradesResponse) ProtoMessage()    {}
func (*SubscribeTradesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{12}
}

func (m *SubscribeTradesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTradesResponse.Unmarshal(m, b)
}
func (m *SubscribeTradesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTradesResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeTradesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTradesResponse.Merge(m, src)
}
func (m *SubscribeTradesResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeTradesResponse.Size(m)
}
func (m *SubscribeTradesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTradesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTradesResponse proto.InternalMessageInfo

func (m *SubscribeTradesResponse) GetTrackingId() string {
	if m != nil {
		return m.TrackingId
	}
	return ""
}

func (m *SubscribeTradesResponse) GetTradeSubscriptions() []*TradeSubscription {
	if m != nil {
		return m.TradeSubscriptions
	}
	return nil
}

//Статус подписки.
type TradeSubscription struct {
	Figi                 string             `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	SubscriptionStatus   SubscriptionStatus `protobuf:"varint,2,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionStatus" json:"subscription_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TradeSubscription) Reset()         { *m = TradeSubscription{} }
func (m *TradeSubscription) String() string { return proto.CompactTextString(m) }
func (*TradeSubscription) ProtoMessage()    {}
func (*TradeSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{13}
}

func (m *TradeSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSubscription.Unmarshal(m, b)
}
func (m *TradeSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSubscription.Marshal(b, m, deterministic)
}
func (m *TradeSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSubscription.Merge(m, src)
}
func (m *TradeSubscription) XXX_Size() int {
	return xxx_messageInfo_TradeSubscription.Size(m)
}
func (m *TradeSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSubscription proto.InternalMessageInfo

func (m *TradeSubscription) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *TradeSubscription) GetSubscriptionStatus() SubscriptionStatus {
	if m != nil {
		return m.SubscriptionStatus
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

//Изменение статуса подписки на торговый статус инструмента.
type SubscribeInfoRequest struct {
	SubscriptionAction   SubscriptionAction `protobuf:"varint,1,opt,name=subscription_action,json=subscriptionAction,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionAction" json:"subscription_action,omitempty"`
	Instruments          []*InfoInstrument  `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubscribeInfoRequest) Reset()         { *m = SubscribeInfoRequest{} }
func (m *SubscribeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeInfoRequest) ProtoMessage()    {}
func (*SubscribeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{14}
}

func (m *SubscribeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeInfoRequest.Unmarshal(m, b)
}
func (m *SubscribeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeInfoRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeInfoRequest.Merge(m, src)
}
func (m *SubscribeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeInfoRequest.Size(m)
}
func (m *SubscribeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeInfoRequest proto.InternalMessageInfo

func (m *SubscribeInfoRequest) GetSubscriptionAction() SubscriptionAction {
	if m != nil {
		return m.SubscriptionAction
	}
	return SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED
}

func (m *SubscribeInfoRequest) GetInstruments() []*InfoInstrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

//Запрос подписки на торговый статус.
type InfoInstrument struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoInstrument) Reset()         { *m = InfoInstrument{} }
func (m *InfoInstrument) String() string { return proto.CompactTextString(m) }
func (*InfoInstrument) ProtoMessage()    {}
func (*InfoInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{15}
}

func (m *InfoInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoInstrument.Unmarshal(m, b)
}
func (m *InfoInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoInstrument.Marshal(b, m, deterministic)
}
func (m *InfoInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoInstrument.Merge(m, src)
}
func (m *InfoInstrument) XXX_Size() int {
	return xxx_messageInfo_InfoInstrument.Size(m)
}
func (m *InfoInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_InfoInstrument proto.InternalMessageInfo

func (m *InfoInstrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

//Результат изменения статуса подписки на торговый статус.
type SubscribeInfoResponse struct {
	TrackingId           string              `protobuf:"bytes,1,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	InfoSubscriptions    []*InfoSubscription `protobuf:"bytes,2,rep,name=info_subscriptions,json=infoSubscriptions,proto3" json:"info_subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeInfoResponse) Reset()         { *m = SubscribeInfoResponse{} }
func (m *SubscribeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeInfoResponse) ProtoMessage()    {}
func (*SubscribeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{16}
}

func (m *SubscribeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeInfoResponse.Unmarshal(m, b)
}
func (m *SubscribeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeInfoResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeInfoResponse.Merge(m, src)
}
func (m *SubscribeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeInfoResponse.Size(m)
}
func (m *SubscribeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeInfoResponse proto.InternalMessageInfo

func (m *SubscribeInfoResponse) GetTrackingId() string {
	if m != nil {
		return m.TrackingId
	}
	return ""
}

func (m *SubscribeInfoResponse) GetInfoSubscriptions() []*InfoSubscription {
	if m != nil {
		return m.InfoSubscriptions
	}
	return nil
}

//Статус подписки.
type InfoSubscription struct {
	Figi                 string             `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	SubscriptionStatus   SubscriptionStatus `protobuf:"varint,2,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionStatus" json:"subscription_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *InfoSubscription) Reset()         { *m = InfoSubscription{} }
func (m *InfoSubscription) String() string { return proto.CompactTextString(m) }
func (*InfoSubscription) ProtoMessage()    {}
func (*InfoSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{17}
}

func (m *InfoSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoSubscription.Unmarshal(m, b)
}
func (m *InfoSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoSubscription.Marshal(b, m, deterministic)
}
func (m *InfoSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoSubscription.Merge(m, src)
}
func (m *InfoSubscription) XXX_Size() int {
	return xxx_messageInfo_InfoSubscription.Size(m)
}
func (m *InfoSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_InfoSubscription proto.InternalMessageInfo

func (m *InfoSubscription) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *InfoSubscription) GetSubscriptionStatus() SubscriptionStatus {
	if m != nil {
		return m.SubscriptionStatus
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

//Изменение статуса подписки на последнюю цену инструмента.
type SubscribeLastPriceRequest struct {
	SubscriptionAction   SubscriptionAction     `protobuf:"varint,1,opt,name=subscription_action,json=subscriptionAction,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionAction" json:"subscription_action,omitempty"`
	Instruments          []*LastPriceInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SubscribeLastPriceRequest) Reset()         { *m = SubscribeLastPriceRequest{} }
func (m *SubscribeLastPriceRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeLastPriceRequest) ProtoMessage()    {}
func (*SubscribeLastPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{18}
}

func (m *SubscribeLastPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeLastPriceRequest.Unmarshal(m, b)
}
func (m *SubscribeLastPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeLastPriceRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeLastPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeLastPriceRequest.Merge(m, src)
}
func (m *SubscribeLastPriceRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeLastPriceRequest.Size(m)
}
func (m *SubscribeLastPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeLastPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeLastPriceRequest proto.InternalMessageInfo

func (m *SubscribeLastPriceRequest) GetSubscriptionAction() SubscriptionAction {
	if m != nil {
		return m.SubscriptionAction
	}
	return SubscriptionAction_SUBSCRIPTION_ACTION_UNSPECIFIED
}

func (m *SubscribeLastPriceRequest) GetInstruments() []*LastPriceInstrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

//Запрос подписки на последнюю цену.
type LastPriceInstrument struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastPriceInstrument) Reset()         { *m = LastPriceInstrument{} }
func (m *LastPriceInstrument) String() string { return proto.CompactTextString(m) }
func (*LastPriceInstrument) ProtoMessage()    {}
func (*LastPriceInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{19}
}

func (m *LastPriceInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastPriceInstrument.Unmarshal(m, b)
}
func (m *LastPriceInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastPriceInstrument.Marshal(b, m, deterministic)
}
func (m *LastPriceInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastPriceInstrument.Merge(m, src)
}
func (m *LastPriceInstrument) XXX_Size() int {
	return xxx_messageInfo_LastPriceInstrument.Size(m)
}
func (m *LastPriceInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_LastPriceInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_LastPriceInstrument proto.InternalMessageInfo

func (m *LastPriceInstrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

//Результат изменения статуса подписки на последнюю цену.
type SubscribeLastPriceResponse struct {
	TrackingId             string                   `protobuf:"bytes,1,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	LastPriceSubscriptions []*LastPriceSubscription `protobuf:"bytes,2,rep,name=last_price_subscriptions,json=lastPriceSubscriptions,proto3" json:"last_price_subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *SubscribeLastPriceResponse) Reset()         { *m = SubscribeLastPriceResponse{} }
func (m *SubscribeLastPriceResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeLastPriceResponse) ProtoMessage()    {}
func (*SubscribeLastPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{20}
}

func (m *SubscribeLastPriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeLastPriceResponse.Unmarshal(m, b)
}
func (m *SubscribeLastPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeLastPriceResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeLastPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeLastPriceResponse.Merge(m, src)
}
func (m *SubscribeLastPriceResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeLastPriceResponse.Size(m)
}
func (m *SubscribeLastPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeLastPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeLastPriceResponse proto.InternalMessageInfo

func (m *SubscribeLastPriceResponse) GetTrackingId() string {
	if m != nil {
		return m.TrackingId
	}
	return ""
}

func (m *SubscribeLastPriceResponse) GetLastPriceSubscriptions() []*LastPriceSubscription {
	if m != nil {
		return m.LastPriceSubscriptions
	}
	return nil
}

//Статус подписки на последнюю цену.
type LastPriceSubscription struct {
	Figi                 string             `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	SubscriptionStatus   SubscriptionStatus `protobuf:"varint,2,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionStatus" json:"subscription_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LastPriceSubscription) Reset()         { *m = LastPriceSubscription{} }
func (m *LastPriceSubscription) String() string { return proto.CompactTextString(m) }
func (*LastPriceSubscription) ProtoMessage()    {}
func (*LastPriceSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{21}
}

func (m *LastPriceSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastPriceSubscription.Unmarshal(m, b)
}
func (m *LastPriceSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastPriceSubscription.Marshal(b, m, deterministic)
}
func (m *LastPriceSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastPriceSubscription.Merge(m, src)
}
func (m *LastPriceSubscription) XXX_Size() int {
	return xxx_messageInfo_LastPriceSubscription.Size(m)
}
func (m *LastPriceSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_LastPriceSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_LastPriceSubscription proto.InternalMessageInfo

func (m *LastPriceSubscription) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *LastPriceSubscription) GetSubscriptionStatus() SubscriptionStatus {
	if m != nil {
		return m.SubscriptionStatus
	}
	return SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED
}

//Пакет свечей в рамках стрима.
type Candle struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Interval             SubscriptionInterval `protobuf:"varint,2,opt,name=gamble,proto3,enum=tinkoff.public.invest.api.contract.v1.SubscriptionInterval" json:"gamble,omitempty"`
	Open                 *Quotation           `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	High                 *Quotation           `protobuf:"bytes,4,opt,name=high,proto3" json:"high,omitempty"`
	Low                  *Quotation           `protobuf:"bytes,5,opt,name=low,proto3" json:"low,omitempty"`
	Close                *Quotation           `protobuf:"bytes,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume               int64                `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	LastTradeTs          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_trade_ts,json=lastTradeTs,proto3" json:"last_trade_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{22}
}

func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (m *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(m, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *Candle) GetInterval() SubscriptionInterval {
	if m != nil {
		return m.Interval
	}
	return SubscriptionInterval_SUBSCRIPTION_INTERVAL_UNSPECIFIED
}

func (m *Candle) GetOpen() *Quotation {
	if m != nil {
		return m.Open
	}
	return nil
}

func (m *Candle) GetHigh() *Quotation {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Candle) GetLow() *Quotation {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Candle) GetClose() *Quotation {
	if m != nil {
		return m.Close
	}
	return nil
}

func (m *Candle) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Candle) GetLastTradeTs() *timestamp.Timestamp {
	if m != nil {
		return m.LastTradeTs
	}
	return nil
}

//Пакет стаканов в рамках стрима.
type OrderBook struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Depth                int32                `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	IsConsistent         bool                 `protobuf:"varint,3,opt,name=is_consistent,json=isConsistent,proto3" json:"is_consistent,omitempty"`
	Bids                 []*Order             `protobuf:"bytes,4,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks                 []*Order             `protobuf:"bytes,5,rep,name=asks,proto3" json:"asks,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	LimitUp              *Quotation           `protobuf:"bytes,7,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`
	LimitDown            *Quotation           `protobuf:"bytes,8,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderBook) Reset()         { *m = OrderBook{} }
func (m *OrderBook) String() string { return proto.CompactTextString(m) }
func (*OrderBook) ProtoMessage()    {}
func (*OrderBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{23}
}

func (m *OrderBook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBook.Unmarshal(m, b)
}
func (m *OrderBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBook.Marshal(b, m, deterministic)
}
func (m *OrderBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBook.Merge(m, src)
}
func (m *OrderBook) XXX_Size() int {
	return xxx_messageInfo_OrderBook.Size(m)
}
func (m *OrderBook) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBook.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBook proto.InternalMessageInfo

func (m *OrderBook) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *OrderBook) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *OrderBook) GetIsConsistent() bool {
	if m != nil {
		return m.IsConsistent
	}
	return false
}

func (m *OrderBook) GetBids() []*Order {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *OrderBook) GetAsks() []*Order {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *OrderBook) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *OrderBook) GetLimitUp() *Quotation {
	if m != nil {
		return m.LimitUp
	}
	return nil
}

func (m *OrderBook) GetLimitDown() *Quotation {
	if m != nil {
		return m.LimitDown
	}
	return nil
}

//Массив предложений/спроса.
type Order struct {
	Price                *Quotation `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity             int64      `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{24}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetPrice() *Quotation {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Order) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

//Информация о сделке.
type Trade struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Direction            TradeDirection       `protobuf:"varint,2,opt,name=direction,proto3,enum=tinkoff.public.invest.api.contract.v1.TradeDirection" json:"direction,omitempty"`
	Price                *Quotation           `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity             int64                `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{25}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *Trade) GetDirection() TradeDirection {
	if m != nil {
		return m.Direction
	}
	return TradeDirection_TRADE_DIRECTION_UNSPECIFIED
}

func (m *Trade) GetPrice() *Quotation {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Trade) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Trade) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

//Пакет изменения торгового статуса.
type TradingStatus struct {
	Figi                     string                `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	TradingStatus            SecurityTradingStatus `protobuf:"varint,2,opt,name=trading_status,json=tradingStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SecurityTradingStatus" json:"trading_status,omitempty"`
	Time                     *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	LimitOrderAvailableFlag  bool                  `protobuf:"varint,4,opt,name=limit_order_available_flag,json=limitOrderAvailableFlag,proto3" json:"limit_order_available_flag,omitempty"`
	MarketOrderAvailableFlag bool                  `protobuf:"varint,5,opt,name=market_order_available_flag,json=marketOrderAvailableFlag,proto3" json:"market_order_available_flag,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}              `json:"-"`
	XXX_unrecognized         []byte                `json:"-"`
	XXX_sizecache            int32                 `json:"-"`
}

func (m *TradingStatus) Reset()         { *m = TradingStatus{} }
func (m *TradingStatus) String() string { return proto.CompactTextString(m) }
func (*TradingStatus) ProtoMessage()    {}
func (*TradingStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{26}
}

func (m *TradingStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradingStatus.Unmarshal(m, b)
}
func (m *TradingStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradingStatus.Marshal(b, m, deterministic)
}
func (m *TradingStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradingStatus.Merge(m, src)
}
func (m *TradingStatus) XXX_Size() int {
	return xxx_messageInfo_TradingStatus.Size(m)
}
func (m *TradingStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TradingStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TradingStatus proto.InternalMessageInfo

func (m *TradingStatus) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *TradingStatus) GetTradingStatus() SecurityTradingStatus {
	if m != nil {
		return m.TradingStatus
	}
	return SecurityTradingStatus_SECURITY_TRADING_STATUS_UNSPECIFIED
}

func (m *TradingStatus) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *TradingStatus) GetLimitOrderAvailableFlag() bool {
	if m != nil {
		return m.LimitOrderAvailableFlag
	}
	return false
}

func (m *TradingStatus) GetMarketOrderAvailableFlag() bool {
	if m != nil {
		return m.MarketOrderAvailableFlag
	}
	return false
}

//Запрос исторических свечей.
type GetCandlesRequest struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Interval             CandleInterval       `protobuf:"varint,4,opt,name=gamble,proto3,enum=tinkoff.public.invest.api.contract.v1.CandleInterval" json:"gamble,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetCandlesRequest) Reset()         { *m = GetCandlesRequest{} }
func (m *GetCandlesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCandlesRequest) ProtoMessage()    {}
func (*GetCandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{27}
}

func (m *GetCandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCandlesRequest.Unmarshal(m, b)
}
func (m *GetCandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCandlesRequest.Marshal(b, m, deterministic)
}
func (m *GetCandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCandlesRequest.Merge(m, src)
}
func (m *GetCandlesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCandlesRequest.Size(m)
}
func (m *GetCandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCandlesRequest proto.InternalMessageInfo

func (m *GetCandlesRequest) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *GetCandlesRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GetCandlesRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *GetCandlesRequest) GetInterval() CandleInterval {
	if m != nil {
		return m.Interval
	}
	return CandleInterval_CANDLE_INTERVAL_UNSPECIFIED
}

//Список свечей.
type GetCandlesResponse struct {
	Candles              []*HistoricCandle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCandlesResponse) Reset()         { *m = GetCandlesResponse{} }
func (m *GetCandlesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCandlesResponse) ProtoMessage()    {}
func (*GetCandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{28}
}

func (m *GetCandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCandlesResponse.Unmarshal(m, b)
}
func (m *GetCandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCandlesResponse.Marshal(b, m, deterministic)
}
func (m *GetCandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCandlesResponse.Merge(m, src)
}
func (m *GetCandlesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCandlesResponse.Size(m)
}
func (m *GetCandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCandlesResponse proto.InternalMessageInfo

func (m *GetCandlesResponse) GetCandles() []*HistoricCandle {
	if m != nil {
		return m.Candles
	}
	return nil
}

//Информация о свече.
type HistoricCandle struct {
	Open                 *Quotation           `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	High                 *Quotation           `protobuf:"bytes,2,opt,name=high,proto3" json:"high,omitempty"`
	Low                  *Quotation           `protobuf:"bytes,3,opt,name=low,proto3" json:"low,omitempty"`
	Close                *Quotation           `protobuf:"bytes,4,opt,name=close,proto3" json:"close,omitempty"`
	Volume               int64                `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	IsComplete           bool                 `protobuf:"varint,7,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HistoricCandle) Reset()         { *m = HistoricCandle{} }
func (m *HistoricCandle) String() string { return proto.CompactTextString(m) }
func (*HistoricCandle) ProtoMessage()    {}
func (*HistoricCandle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{29}
}

func (m *HistoricCandle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricCandle.Unmarshal(m, b)
}
func (m *HistoricCandle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricCandle.Marshal(b, m, deterministic)
}
func (m *HistoricCandle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricCandle.Merge(m, src)
}
func (m *HistoricCandle) XXX_Size() int {
	return xxx_messageInfo_HistoricCandle.Size(m)
}
func (m *HistoricCandle) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricCandle.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricCandle proto.InternalMessageInfo

func (m *HistoricCandle) GetOpen() *Quotation {
	if m != nil {
		return m.Open
	}
	return nil
}

func (m *HistoricCandle) GetHigh() *Quotation {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *HistoricCandle) GetLow() *Quotation {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *HistoricCandle) GetClose() *Quotation {
	if m != nil {
		return m.Close
	}
	return nil
}

func (m *HistoricCandle) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *HistoricCandle) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *HistoricCandle) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

//Запрос получения последних цен.
type GetLastPricesRequest struct {
	Figi                 []string `protobuf:"bytes,1,rep,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastPricesRequest) Reset()         { *m = GetLastPricesRequest{} }
func (m *GetLastPricesRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastPricesRequest) ProtoMessage()    {}
func (*GetLastPricesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{30}
}

func (m *GetLastPricesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastPricesRequest.Unmarshal(m, b)
}
func (m *GetLastPricesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastPricesRequest.Marshal(b, m, deterministic)
}
func (m *GetLastPricesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastPricesRequest.Merge(m, src)
}
func (m *GetLastPricesRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastPricesRequest.Size(m)
}
func (m *GetLastPricesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastPricesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastPricesRequest proto.InternalMessageInfo

func (m *GetLastPricesRequest) GetFigi() []string {
	if m != nil {
		return m.Figi
	}
	return nil
}

//Список последних цен.
type GetLastPricesResponse struct {
	LastPrices           []*LastPrice `protobuf:"bytes,1,rep,name=last_prices,json=lastPrices,proto3" json:"last_prices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetLastPricesResponse) Reset()         { *m = GetLastPricesResponse{} }
func (m *GetLastPricesResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastPricesResponse) ProtoMessage()    {}
func (*GetLastPricesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{31}
}

func (m *GetLastPricesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastPricesResponse.Unmarshal(m, b)
}
func (m *GetLastPricesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastPricesResponse.Marshal(b, m, deterministic)
}
func (m *GetLastPricesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastPricesResponse.Merge(m, src)
}
func (m *GetLastPricesResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastPricesResponse.Size(m)
}
func (m *GetLastPricesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastPricesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastPricesResponse proto.InternalMessageInfo

func (m *GetLastPricesResponse) GetLastPrices() []*LastPrice {
	if m != nil {
		return m.LastPrices
	}
	return nil
}

//Информация о цене.
type LastPrice struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Price                *Quotation           `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LastPrice) Reset()         { *m = LastPrice{} }
func (m *LastPrice) String() string { return proto.CompactTextString(m) }
func (*LastPrice) ProtoMessage()    {}
func (*LastPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{32}
}

func (m *LastPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastPrice.Unmarshal(m, b)
}
func (m *LastPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastPrice.Marshal(b, m, deterministic)
}
func (m *LastPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastPrice.Merge(m, src)
}
func (m *LastPrice) XXX_Size() int {
	return xxx_messageInfo_LastPrice.Size(m)
}
func (m *LastPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_LastPrice.DiscardUnknown(m)
}

var xxx_messageInfo_LastPrice proto.InternalMessageInfo

func (m *LastPrice) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *LastPrice) GetPrice() *Quotation {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *LastPrice) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

//Запрос стакана.
type GetOrderBookRequest struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Depth                int32    `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderBookRequest) Reset()         { *m = GetOrderBookRequest{} }
func (m *GetOrderBookRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderBookRequest) ProtoMessage()    {}
func (*GetOrderBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{33}
}

func (m *GetOrderBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderBookRequest.Unmarshal(m, b)
}
func (m *GetOrderBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderBookRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderBookRequest.Merge(m, src)
}
func (m *GetOrderBookRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderBookRequest.Size(m)
}
func (m *GetOrderBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderBookRequest proto.InternalMessageInfo

func (m *GetOrderBookRequest) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *GetOrderBookRequest) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

//Информация о стакане.
type GetOrderBookResponse struct {
	Figi                 string     `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Depth                int32      `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Bids                 []*Order   `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks                 []*Order   `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	LastPrice            *Quotation `protobuf:"bytes,5,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	ClosePrice           *Quotation `protobuf:"bytes,6,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	LimitUp              *Quotation `protobuf:"bytes,7,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`
	LimitDown            *Quotation `protobuf:"bytes,8,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetOrderBookResponse) Reset()         { *m = GetOrderBookResponse{} }
func (m *GetOrderBookResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrderBookResponse) ProtoMessage()    {}
func (*GetOrderBookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{34}
}

func (m *GetOrderBookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderBookResponse.Unmarshal(m, b)
}
func (m *GetOrderBookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderBookResponse.Marshal(b, m, deterministic)
}
func (m *GetOrderBookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderBookResponse.Merge(m, src)
}
func (m *GetOrderBookResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrderBookResponse.Size(m)
}
func (m *GetOrderBookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderBookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderBookResponse proto.InternalMessageInfo

func (m *GetOrderBookResponse) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *GetOrderBookResponse) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *GetOrderBookResponse) GetBids() []*Order {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *GetOrderBookResponse) GetAsks() []*Order {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *GetOrderBookResponse) GetLastPrice() *Quotation {
	if m != nil {
		return m.LastPrice
	}
	return nil
}

func (m *GetOrderBookResponse) GetClosePrice() *Quotation {
	if m != nil {
		return m.ClosePrice
	}
	return nil
}

func (m *GetOrderBookResponse) GetLimitUp() *Quotation {
	if m != nil {
		return m.LimitUp
	}
	return nil
}

func (m *GetOrderBookResponse) GetLimitDown() *Quotation {
	if m != nil {
		return m.LimitDown
	}
	return nil
}

//Запрос получения торгового статуса.
type GetTradingStatusRequest struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTradingStatusRequest) Reset()         { *m = GetTradingStatusRequest{} }
func (m *GetTradingStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTradingStatusRequest) ProtoMessage()    {}
func (*GetTradingStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{35}
}

func (m *GetTradingStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradingStatusRequest.Unmarshal(m, b)
}
func (m *GetTradingStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradingStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTradingStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradingStatusRequest.Merge(m, src)
}
func (m *GetTradingStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTradingStatusRequest.Size(m)
}
func (m *GetTradingStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradingStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradingStatusRequest proto.InternalMessageInfo

func (m *GetTradingStatusRequest) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

//Информация о торговом статусе.
type GetTradingStatusResponse struct {
	Figi                     string                `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	TradingStatus            SecurityTradingStatus `protobuf:"varint,2,opt,name=trading_status,json=tradingStatus,proto3,enum=tinkoff.public.invest.api.contract.v1.SecurityTradingStatus" json:"trading_status,omitempty"`
	LimitOrderAvailableFlag  bool                  `protobuf:"varint,3,opt,name=limit_order_available_flag,json=limitOrderAvailableFlag,proto3" json:"limit_order_available_flag,omitempty"`
	MarketOrderAvailableFlag bool                  `protobuf:"varint,4,opt,name=market_order_available_flag,json=marketOrderAvailableFlag,proto3" json:"market_order_available_flag,omitempty"`
	ApiTradeAvailableFlag    bool                  `protobuf:"varint,5,opt,name=api_trade_available_flag,json=apiTradeAvailableFlag,proto3" json:"api_trade_available_flag,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}              `json:"-"`
	XXX_unrecognized         []byte                `json:"-"`
	XXX_sizecache            int32                 `json:"-"`
}

func (m *GetTradingStatusResponse) Reset()         { *m = GetTradingStatusResponse{} }
func (m *GetTradingStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetTradingStatusResponse) ProtoMessage()    {}
func (*GetTradingStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{36}
}

func (m *GetTradingStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradingStatusResponse.Unmarshal(m, b)
}
func (m *GetTradingStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradingStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetTradingStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradingStatusResponse.Merge(m, src)
}
func (m *GetTradingStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetTradingStatusResponse.Size(m)
}
func (m *GetTradingStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradingStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradingStatusResponse proto.InternalMessageInfo

func (m *GetTradingStatusResponse) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *GetTradingStatusResponse) GetTradingStatus() SecurityTradingStatus {
	if m != nil {
		return m.TradingStatus
	}
	return SecurityTradingStatus_SECURITY_TRADING_STATUS_UNSPECIFIED
}

func (m *GetTradingStatusResponse) GetLimitOrderAvailableFlag() bool {
	if m != nil {
		return m.LimitOrderAvailableFlag
	}
	return false
}

func (m *GetTradingStatusResponse) GetMarketOrderAvailableFlag() bool {
	if m != nil {
		return m.MarketOrderAvailableFlag
	}
	return false
}

func (m *GetTradingStatusResponse) GetApiTradeAvailableFlag() bool {
	if m != nil {
		return m.ApiTradeAvailableFlag
	}
	return false
}

//Запрос последних обезличенных сделок по инструменту.
type GetLastTradesRequest struct {
	Figi                 string               `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLastTradesRequest) Reset()         { *m = GetLastTradesRequest{} }
func (m *GetLastTradesRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastTradesRequest) ProtoMessage()    {}
func (*GetLastTradesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{37}
}

func (m *GetLastTradesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastTradesRequest.Unmarshal(m, b)
}
func (m *GetLastTradesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastTradesRequest.Marshal(b, m, deterministic)
}
func (m *GetLastTradesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastTradesRequest.Merge(m, src)
}
func (m *GetLastTradesRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastTradesRequest.Size(m)
}
func (m *GetLastTradesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastTradesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastTradesRequest proto.InternalMessageInfo

func (m *GetLastTradesRequest) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *GetLastTradesRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GetLastTradesRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

//Последние обезличенные сделки по инструменту.
type GetLastTradesResponse struct {
	Trades               []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastTradesResponse) Reset()         { *m = GetLastTradesResponse{} }
func (m *GetLastTradesResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastTradesResponse) ProtoMessage()    {}
func (*GetLastTradesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{38}
}

func (m *GetLastTradesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastTradesResponse.Unmarshal(m, b)
}
func (m *GetLastTradesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastTradesResponse.Marshal(b, m, deterministic)
}
func (m *GetLastTradesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastTradesResponse.Merge(m, src)
}
func (m *GetLastTradesResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastTradesResponse.Size(m)
}
func (m *GetLastTradesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastTradesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastTradesResponse proto.InternalMessageInfo

func (m *GetLastTradesResponse) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func init() {
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.SubscriptionAction", SubscriptionAction_name, SubscriptionAction_value)
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.SubscriptionInterval", SubscriptionInterval_name, SubscriptionInterval_value)
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.SubscriptionStatus", SubscriptionStatus_name, SubscriptionStatus_value)
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.TradeDirection", TradeDirection_name, TradeDirection_value)
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.CandleInterval", CandleInterval_name, CandleInterval_value)
	proto.RegisterType((*MarketDataRequest)(nil), "tinkoff.public.invest.api.contract.v1.MarketDataRequest")
	proto.RegisterType((*MarketDataResponse)(nil), "tinkoff.public.invest.api.contract.v1.MarketDataResponse")
	proto.RegisterType((*SubscribeCandlesRequest)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest")
	proto.RegisterType((*CandleInstrument)(nil), "tinkoff.public.invest.api.contract.v1.CandleInstrument")
	proto.RegisterType((*SubscribeCandlesResponse)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse")
	proto.RegisterType((*CandleSubscription)(nil), "tinkoff.public.invest.api.contract.v1.CandleSubscription")
	proto.RegisterType((*SubscribeOrderBookRequest)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest")
	proto.RegisterType((*OrderBookInstrument)(nil), "tinkoff.public.invest.api.contract.v1.OrderBookInstrument")
	proto.RegisterType((*SubscribeOrderBookResponse)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse")
	proto.RegisterType((*OrderBookSubscription)(nil), "tinkoff.public.invest.api.contract.v1.OrderBookSubscription")
	proto.RegisterType((*SubscribeTradesRequest)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest")
	proto.RegisterType((*TradeInstrument)(nil), "tinkoff.public.invest.api.contract.v1.TradeInstrument")
	proto.RegisterType((*SubscribeTradesResponse)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse")
	proto.RegisterType((*TradeSubscription)(nil), "tinkoff.public.invest.api.contract.v1.TradeSubscription")
	proto.RegisterType((*SubscribeInfoRequest)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest")
	proto.RegisterType((*InfoInstrument)(nil), "tinkoff.public.invest.api.contract.v1.InfoInstrument")
	proto.RegisterType((*SubscribeInfoResponse)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse")
	proto.RegisterType((*InfoSubscription)(nil), "tinkoff.public.invest.api.contract.v1.InfoSubscription")
	proto.RegisterType((*SubscribeLastPriceRequest)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest")
	proto.RegisterType((*LastPriceInstrument)(nil), "tinkoff.public.invest.api.contract.v1.LastPriceInstrument")
	proto.RegisterType((*SubscribeLastPriceResponse)(nil), "tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse")
	proto.RegisterType((*LastPriceSubscription)(nil), "tinkoff.public.invest.api.contract.v1.LastPriceSubscription")
	proto.RegisterType((*Candle)(nil), "tinkoff.public.invest.api.contract.v1.Candle")
	proto.RegisterType((*OrderBook)(nil), "tinkoff.public.invest.api.contract.v1.OrderBook")
	proto.RegisterType((*Order)(nil), "tinkoff.public.invest.api.contract.v1.Order")
	proto.RegisterType((*Trade)(nil), "tinkoff.public.invest.api.contract.v1.Trade")
	proto.RegisterType((*TradingStatus)(nil), "tinkoff.public.invest.api.contract.v1.TradingStatus")
	proto.RegisterType((*GetCandlesRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetCandlesRequest")
	proto.RegisterType((*GetCandlesResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetCandlesResponse")
	proto.RegisterType((*HistoricCandle)(nil), "tinkoff.public.invest.api.contract.v1.HistoricCandle")
	proto.RegisterType((*GetLastPricesRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetLastPricesRequest")
	proto.RegisterType((*GetLastPricesResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetLastPricesResponse")
	proto.RegisterType((*LastPrice)(nil), "tinkoff.public.invest.api.contract.v1.LastPrice")
	proto.RegisterType((*GetOrderBookRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetOrderBookRequest")
	proto.RegisterType((*GetOrderBookResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetOrderBookResponse")
	proto.RegisterType((*GetTradingStatusRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest")
	proto.RegisterType((*GetTradingStatusResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse")
	proto.RegisterType((*GetLastTradesRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetLastTradesRequest")
	proto.RegisterType((*GetLastTradesResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetLastTradesResponse")
}

func init() {
	proto.RegisterFile("marketdata.proto", fileDescriptor_e6b85761666e9c8c)
}

var fileDescriptor_e6b85761666e9c8c = []byte{
	// 2264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0xcd, 0x6f, 0x1b, 0xc7,
	0x15, 0xd7, 0x2e, 0x49, 0x7d, 0x3c, 0x59, 0x2a, 0x35, 0xfa, 0xa2, 0x99, 0x04, 0x72, 0x36, 0x76,
	0xab, 0x28, 0x0e, 0x1d, 0xab, 0x75, 0x5c, 0x47, 0x8e, 0x1d, 0x4a, 0xa4, 0xc4, 0x45, 0x65, 0x52,
	0x5e, 0x92, 0x4a, 0x5c, 0x38, 0x20, 0x56, 0xe4, 0x92, 0x9e, 0x88, 0xdc, 0x65, 0x38, 0x43, 0x19,
	0x06, 0x0a, 0x04, 0x41, 0x0b, 0x17, 0x68, 0x4e, 0x6d, 0x50, 0xb4, 0xc7, 0xa2, 0x40, 0x51, 0xa0,
	0x1f, 0xb7, 0xb6, 0x7f, 0x43, 0xd1, 0x5b, 0x2f, 0xbd, 0x14, 0x28, 0x7a, 0xe9, 0xa5, 0x40, 0xff,
	0x85, 0xa2, 0xd8, 0xd9, 0xe5, 0x72, 0x3f, 0x86, 0xf2, 0x2e, 0xa5, 0xca, 0xed, 0x49, 0xe2, 0xbc,
	0xf7, 0x7e, 0xf3, 0xe6, 0xcd, 0x6f, 0xe6, 0xbd, 0x79, 0x24, 0x24, 0x3b, 0x6a, 0xef, 0x58, 0xa3,
	0x0d, 0x95, 0xaa, 0x99, 0x6e, 0xcf, 0xa0, 0x06, 0xba, 0x46, 0xb1, 0x7e, 0x6c, 0x34, 0x9b, 0x99,
	0x6e, 0xff, 0xa8, 0x8d, 0xeb, 0x19, 0xac, 0x9f, 0x68, 0x84, 0x66, 0xd4, 0x2e, 0xce, 0xd4, 0x0d,
	0x9d, 0xf6, 0xd4, 0x3a, 0xcd, 0x9c, 0xdc, 0x4c, 0xaf, 0xb5, 0x0c, 0xa3, 0xd5, 0xd6, 0x6e, 0x30,
	0xa3, 0xa3, 0x7e, 0xf3, 0x06, 0xc5, 0x1d, 0x8d, 0x50, 0xb5, 0xd3, 0xb5, 0x70, 0xd2, 0x97, 0xea,
	0x46, 0xa7, 0x63, 0xe8, 0xd6, 0x27, 0xe9, 0xa7, 0x09, 0x58, 0x78, 0xc0, 0xa6, 0xca, 0xa9, 0x54,
	0x55, 0xb4, 0x4f, 0xfb, 0x1a, 0xa1, 0xe8, 0x3b, 0x70, 0x99, 0xf4, 0x8f, 0x48, 0xbd, 0x87, 0x8f,
	0xb4, 0x5a, 0x5d, 0xd5, 0x1b, 0x6d, 0x8d, 0xd4, 0x7a, 0x96, 0x30, 0x25, 0x5c, 0x11, 0xd6, 0x67,
	0x37, 0xef, 0x65, 0x42, 0xf9, 0x93, 0x29, 0x0f, 0x70, 0x76, 0x2c, 0x18, 0x7b, 0x8a, 0xc2, 0x84,
	0xb2, 0x4a, 0xf8, 0x22, 0xf4, 0x5d, 0x01, 0x5e, 0x1d, 0x4e, 0x6f, 0xf4, 0x1a, 0x5a, 0xaf, 0x76,
	0x64, 0x18, 0xc7, 0x8e, 0x07, 0x22, 0xf3, 0xe0, 0x83, 0xa8, 0x1e, 0x94, 0x4c, 0xa4, 0x6d, 0xc3,
	0x38, 0x1e, 0xfa, 0x30, 0x5c, 0xa6, 0x5f, 0x88, 0x9e, 0x41, 0x6a, 0xe8, 0x04, 0xed, 0xa9, 0x0d,
	0x57, 0x08, 0x62, 0xcc, 0x81, 0xf7, 0xa3, 0x3a, 0x50, 0x61, 0x28, 0xc3, 0xd9, 0x57, 0x08, 0x57,
	0x82, 0x08, 0x0c, 0x25, 0x35, 0xac, 0x37, 0x0d, 0x67, 0xe2, 0x38, 0x9b, 0x78, 0x2b, 0xea, 0xc4,
	0xb2, 0xde, 0x34, 0x86, 0xd3, 0x2e, 0x11, 0xce, 0xb8, 0x2f, 0xea, 0x6d, 0x95, 0xd0, 0x5a, 0xb7,
	0x87, 0xeb, 0x9a, 0x33, 0x77, 0x62, 0xbc, 0xa8, 0xef, 0xab, 0x84, 0x1e, 0x98, 0x40, 0xbc, 0xa8,
	0xfb, 0x85, 0xdb, 0x33, 0x30, 0xd5, 0x55, 0x9f, 0xb5, 0x0d, 0xb5, 0x21, 0xfd, 0x7b, 0x1a, 0x90,
	0x9b, 0x9a, 0xa4, 0x6b, 0xe8, 0x44, 0x43, 0x9f, 0x41, 0x9a, 0xc7, 0x4d, 0x4b, 0x6a, 0x93, 0xf3,
	0xfe, 0xd8, 0xe4, 0xb4, 0x60, 0x0a, 0x13, 0x4a, 0x8a, 0x8c, 0x90, 0xa1, 0xe7, 0x02, 0xbc, 0x36,
	0x82, 0x9e, 0xb6, 0x13, 0x16, 0x3f, 0xb3, 0x67, 0xe0, 0xa7, 0xe3, 0x46, 0x9a, 0x8c, 0x94, 0x7a,
	0x4f, 0xa9, 0xc3, 0x50, 0xdb, 0x87, 0xd8, 0x78, 0xa7, 0x74, 0x40, 0x44, 0xc7, 0x81, 0x55, 0xc2,
	0x17, 0xa1, 0x13, 0x58, 0x0d, 0x90, 0xd4, 0x9e, 0xdb, 0x62, 0xe9, 0xdd, 0xf1, 0x58, 0xea, 0xcc,
	0xbc, 0x4c, 0x78, 0x02, 0xb4, 0x07, 0x93, 0xd6, 0xae, 0xdb, 0x84, 0x7c, 0x3b, 0xe4, 0x34, 0xd6,
	0x36, 0x16, 0x26, 0x14, 0xdb, 0x1c, 0xe5, 0x20, 0xc1, 0x82, 0x96, 0x9a, 0x64, 0x38, 0xd7, 0x43,
	0xe2, 0xb0, 0x30, 0x14, 0x26, 0x14, 0xcb, 0x18, 0x1d, 0xc0, 0x0c, 0xa3, 0x80, 0xc9, 0x80, 0xd4,
	0x14, 0x43, 0x7a, 0x27, 0x24, 0x92, 0xb3, 0xa3, 0x85, 0x09, 0x65, 0x08, 0x82, 0x3e, 0x86, 0x79,
	0x13, 0x1a, 0xeb, 0xad, 0x1a, 0xa1, 0x2a, 0xed, 0x93, 0xd4, 0x34, 0x83, 0xfd, 0x46, 0x04, 0x07,
	0xb1, 0xde, 0x2a, 0x33, 0xdb, 0xc2, 0x84, 0x32, 0x47, 0xdd, 0x03, 0x28, 0x0b, 0xf1, 0x2e, 0xd6,
	0x5b, 0xa9, 0x19, 0x06, 0xfa, 0x56, 0x48, 0xd0, 0x03, 0xac, 0xb7, 0x0a, 0x13, 0x0a, 0x33, 0xf5,
	0x9d, 0x00, 0xcf, 0x55, 0x61, 0x33, 0x00, 0xc6, 0x3b, 0x01, 0xae, 0xeb, 0x80, 0x73, 0x02, 0x02,
	0x52, 0xf4, 0x10, 0x60, 0x38, 0x7b, 0x6a, 0x36, 0x52, 0xf4, 0x1d, 0x34, 0x33, 0xfa, 0xed, 0xc1,
	0x07, 0xf7, 0x05, 0xf4, 0x77, 0x01, 0x56, 0x47, 0xa4, 0x2f, 0xf4, 0x09, 0x2c, 0xda, 0x7e, 0x75,
	0x29, 0x36, 0xf4, 0x9a, 0x5a, 0x37, 0xff, 0xb0, 0xeb, 0x67, 0x7e, 0xf3, 0x4e, 0xb4, 0x75, 0x33,
	0x84, 0x2c, 0x03, 0x50, 0x10, 0x09, 0x8c, 0xa1, 0x47, 0x30, 0x8b, 0x75, 0x42, 0x7b, 0xfd, 0x8e,
	0xa6, 0x53, 0x92, 0x12, 0xaf, 0xc4, 0xd6, 0x67, 0x37, 0x6f, 0x47, 0xa2, 0xbd, 0xec, 0xd8, 0x2b,
	0x6e, 0x2c, 0xe9, 0x33, 0x48, 0xfa, 0x15, 0x10, 0x82, 0x78, 0x13, 0xb7, 0x30, 0x5b, 0xcb, 0x8c,
	0xc2, 0xfe, 0x47, 0x1f, 0xc2, 0x34, 0xd6, 0xa9, 0xd6, 0x3b, 0x51, 0xdb, 0xec, 0x76, 0x9b, 0x8f,
	0x9a, 0x83, 0xd8, 0x7a, 0x64, 0x1b, 0x42, 0x71, 0xc0, 0xa4, 0x5f, 0x0b, 0x90, 0x1a, 0x75, 0x0b,
	0xa3, 0x35, 0x98, 0x35, 0x71, 0x8e, 0xcd, 0xa3, 0x80, 0x1b, 0xb6, 0x43, 0x30, 0x18, 0x92, 0x1b,
	0x48, 0x87, 0xe5, 0x41, 0x06, 0x70, 0xc7, 0x6d, 0x10, 0xa3, 0x3b, 0x91, 0x62, 0xe4, 0xf6, 0x54,
	0x59, 0xb2, 0x71, 0xdd, 0x83, 0x44, 0xfa, 0x97, 0x00, 0x28, 0xa8, 0x7c, 0xa1, 0x11, 0x0b, 0x30,
	0xcf, 0xbe, 0x23, 0x62, 0x63, 0x33, 0xcf, 0xba, 0x17, 0xbc, 0xcc, 0xb3, 0xc6, 0xa4, 0x7f, 0x08,
	0x70, 0x79, 0x64, 0xf9, 0x74, 0xa1, 0x67, 0xe0, 0x31, 0xef, 0x0c, 0xbc, 0x17, 0xf5, 0xa2, 0x1d,
	0x75, 0x0c, 0xee, 0xc3, 0x22, 0x47, 0x87, 0xbb, 0xaf, 0x4b, 0x90, 0x68, 0x68, 0x5d, 0xfa, 0x84,
	0x6d, 0x6a, 0x42, 0xb1, 0x3e, 0x48, 0xbf, 0x17, 0x20, 0x3d, 0x3a, 0x8f, 0xbf, 0x98, 0xc8, 0x27,
	0x90, 0x72, 0x15, 0x12, 0x3c, 0x2e, 0xdf, 0x8d, 0xba, 0x56, 0x0f, 0x9d, 0x57, 0x0c, 0xde, 0x30,
	0x91, 0x7e, 0x2b, 0xc0, 0x32, 0xd7, 0x22, 0xfc, 0xda, 0x2f, 0x94, 0x90, 0x7f, 0x13, 0x60, 0x85,
	0x5f, 0x4e, 0x5f, 0x28, 0x1b, 0x3f, 0xe2, 0xb1, 0xf1, 0xdd, 0x28, 0x05, 0xc4, 0x28, 0x26, 0x5e,
	0x83, 0xaf, 0xf8, 0xe4, 0xbc, 0x9d, 0x90, 0x7e, 0xe1, 0x4e, 0x4d, 0xbe, 0xc2, 0xec, 0x85, 0x64,
	0xc3, 0xb0, 0xc8, 0x6a, 0x17, 0x2e, 0xcf, 0xbe, 0x19, 0x65, 0x15, 0x1e, 0x8e, 0x21, 0xea, 0x1f,
	0x22, 0xd2, 0x97, 0x02, 0x2c, 0x04, 0x34, 0xb9, 0xdc, 0x1a, 0xc1, 0x22, 0xf1, 0xbf, 0xc1, 0xa2,
	0xbf, 0x0a, 0xb0, 0xc4, 0x7b, 0x1b, 0x5d, 0x28, 0x87, 0x3e, 0xe4, 0x71, 0xe8, 0x56, 0xc8, 0x39,
	0x4c, 0xa7, 0x47, 0x51, 0xe8, 0x2a, 0xcc, 0x7b, 0xc5, 0x5c, 0x06, 0xfd, 0x4c, 0x80, 0x65, 0x6e,
	0xe5, 0xfd, 0x62, 0xfe, 0x34, 0x01, 0xb1, 0x7a, 0x9f, 0x47, 0x9f, 0xdb, 0x11, 0x16, 0xe0, 0x61,
	0xcf, 0x02, 0xf6, 0x8d, 0x10, 0xe9, 0x47, 0x02, 0x24, 0xfd, 0x7a, 0x2f, 0x9d, 0x3b, 0x9e, 0x94,
	0xe8, 0x7f, 0xbe, 0xfe, 0xff, 0xa4, 0x44, 0xc7, 0xf3, 0x51, 0x2c, 0x7a, 0x13, 0x16, 0x39, 0x3a,
	0x5c, 0x2a, 0x79, 0x92, 0x5f, 0xb0, 0x48, 0x0f, 0x93, 0xfc, 0x5c, 0x6f, 0x88, 0xb3, 0x24, 0x3f,
	0x67, 0x72, 0x6f, 0xf2, 0x6b, 0xf3, 0x86, 0x89, 0xf4, 0x13, 0x01, 0x96, 0xb9, 0x16, 0x2f, 0x9d,
	0x64, 0x3f, 0x8e, 0xc3, 0xa4, 0x55, 0x67, 0x5e, 0x6c, 0x6d, 0x99, 0x83, 0xb8, 0xd1, 0xd5, 0x74,
	0xbb, 0x79, 0x10, 0xf6, 0x25, 0xf5, 0xb0, 0x6f, 0x50, 0x95, 0x45, 0x9a, 0x59, 0x9b, 0x28, 0x4f,
	0x70, 0xeb, 0x89, 0xdd, 0x06, 0x18, 0x03, 0xc5, 0xb4, 0x46, 0xdb, 0x10, 0x6b, 0x1b, 0x4f, 0xed,
	0x47, 0x7e, 0x74, 0x10, 0xd3, 0x18, 0xed, 0x42, 0xa2, 0xde, 0x36, 0xc8, 0xe0, 0x89, 0x1f, 0x1d,
	0xc5, 0x32, 0x47, 0x2b, 0x30, 0x79, 0x62, 0xb4, 0xfb, 0x1d, 0x8d, 0xbd, 0xf0, 0x63, 0x8a, 0xfd,
	0x09, 0x65, 0x20, 0x4e, 0x71, 0x47, 0xb3, 0x1f, 0xe8, 0xe9, 0x8c, 0xd5, 0x7b, 0xcd, 0x0c, 0x7a,
	0xaf, 0x99, 0xca, 0xa0, 0xf7, 0xaa, 0x30, 0x3d, 0x74, 0x0f, 0xe6, 0x18, 0xd3, 0xad, 0xf4, 0x4b,
	0x89, 0xfd, 0x08, 0x3f, 0xcd, 0x70, 0xd6, 0x34, 0x60, 0x29, 0xb4, 0x42, 0xa4, 0xdf, 0xc4, 0x60,
	0xc6, 0x29, 0xd7, 0x22, 0x94, 0x68, 0x6f, 0xc0, 0x1c, 0x26, 0xb5, 0xba, 0xa1, 0x13, 0x4c, 0xa8,
	0xa6, 0x5b, 0x0d, 0xcc, 0x69, 0xe5, 0x12, 0x26, 0x3b, 0xce, 0x18, 0xfa, 0x00, 0xe2, 0x47, 0xb8,
	0x41, 0x52, 0x71, 0x76, 0xe4, 0xae, 0x47, 0xa9, 0x37, 0x15, 0x66, 0x69, 0x22, 0xa8, 0xe4, 0x98,
	0xa4, 0x12, 0xe3, 0x20, 0x98, 0x96, 0x4e, 0x40, 0x27, 0x43, 0x06, 0xf4, 0x5b, 0x30, 0xdd, 0xc6,
	0x1d, 0x4c, 0x6b, 0xfd, 0x6e, 0xc4, 0xe6, 0xcb, 0x70, 0x8f, 0xa7, 0x18, 0x42, 0xb5, 0x8b, 0x4a,
	0x00, 0x16, 0x58, 0xc3, 0x78, 0xaa, 0xdb, 0x7b, 0x1a, 0x1d, 0x6e, 0x86, 0x61, 0xe4, 0x8c, 0xa7,
	0xba, 0x74, 0x0c, 0x09, 0xb6, 0x38, 0x93, 0x87, 0x56, 0x8b, 0x42, 0x18, 0x97, 0x87, 0xcc, 0x1c,
	0xa5, 0x61, 0xfa, 0xd3, 0xbe, 0xaa, 0x53, 0x4c, 0x9f, 0xb1, 0x0d, 0x8e, 0x29, 0xce, 0x67, 0xe9,
	0x7b, 0x22, 0x24, 0x18, 0x4f, 0xb8, 0xbc, 0x28, 0xc3, 0x4c, 0x03, 0xf7, 0x34, 0x2b, 0x1d, 0x59,
	0x77, 0xc6, 0xad, 0x28, 0x95, 0x5e, 0x6e, 0x60, 0xac, 0x0c, 0x71, 0x86, 0xcb, 0x8a, 0x9d, 0xdf,
	0xb2, 0xe2, 0xde, 0x65, 0x39, 0x8c, 0x48, 0x84, 0x63, 0x84, 0xf4, 0x3b, 0x11, 0xe6, 0x3c, 0x1d,
	0x30, 0x6e, 0x38, 0xea, 0x81, 0x1e, 0x9b, 0x15, 0x93, 0xd0, 0x3d, 0x4b, 0xad, 0xde, 0xef, 0x61,
	0xfa, 0xcc, 0x33, 0x93, 0xbf, 0xd3, 0x36, 0x70, 0x3d, 0x16, 0x92, 0xcc, 0x5b, 0x90, 0xb6, 0xf8,
	0x67, 0x3d, 0x05, 0xd5, 0x13, 0x15, 0xb7, 0xd5, 0xa3, 0xb6, 0x56, 0x6b, 0xb6, 0xd5, 0x16, 0x0b,
	0xcc, 0xb4, 0xb2, 0xca, 0x34, 0x18, 0xab, 0xb2, 0x03, 0xf9, 0x6e, 0x5b, 0x6d, 0xa1, 0xf7, 0xe1,
	0x15, 0xeb, 0x2b, 0x23, 0xbe, 0x75, 0x82, 0x59, 0xa7, 0x2c, 0x95, 0xa0, 0xb9, 0xf4, 0x17, 0x01,
	0x16, 0xf6, 0x34, 0xea, 0xeb, 0x72, 0xf1, 0x42, 0x97, 0x81, 0x78, 0xb3, 0x67, 0x74, 0xec, 0x26,
	0xf7, 0xa9, 0xab, 0x32, 0xf5, 0xd0, 0x06, 0x88, 0xd4, 0x08, 0x11, 0x03, 0x91, 0x1a, 0xe8, 0xa1,
	0x2b, 0xb1, 0xc5, 0x23, 0x91, 0x74, 0xd0, 0xc5, 0x0a, 0x34, 0x98, 0x34, 0x40, 0xee, 0x75, 0xd9,
	0x35, 0x49, 0x09, 0xa6, 0xec, 0x06, 0x4f, 0x4a, 0x88, 0x54, 0x78, 0x17, 0x30, 0xa1, 0x46, 0x0f,
	0xd7, 0x2d, 0x40, 0x65, 0x80, 0x22, 0xfd, 0x30, 0x06, 0xf3, 0x5e, 0x99, 0x93, 0x4c, 0x85, 0x73,
	0x49, 0xa6, 0xe2, 0x79, 0x24, 0xd3, 0xd8, 0xb9, 0x24, 0xd3, 0xf8, 0x79, 0x25, 0xd3, 0x04, 0x37,
	0x99, 0x86, 0xbd, 0xfb, 0xd7, 0x60, 0x96, 0x25, 0xb5, 0x4e, 0xb7, 0xad, 0x51, 0x2b, 0x33, 0x4f,
	0x2b, 0x60, 0xa6, 0x34, 0x6b, 0x44, 0xda, 0x80, 0xa5, 0x3d, 0x8d, 0x3a, 0x15, 0x1e, 0x87, 0xd5,
	0x31, 0xa7, 0x86, 0xfd, 0x04, 0x96, 0x7d, 0xba, 0x4e, 0x8b, 0x79, 0x76, 0x58, 0x9c, 0x0e, 0xd8,
	0x12, 0xb9, 0xc7, 0xac, 0x80, 0x53, 0x83, 0xb2, 0xba, 0x73, 0xc6, 0x91, 0x70, 0xcf, 0x98, 0x73,
	0xb1, 0x8a, 0x67, 0xbb, 0x58, 0x23, 0xde, 0x40, 0xd2, 0x7d, 0x58, 0xdc, 0xb3, 0xaf, 0x07, 0x77,
	0xa3, 0x2f, 0x7c, 0x1f, 0xec, 0x79, 0x9c, 0xc5, 0x3c, 0xd8, 0x01, 0x0b, 0x5f, 0xab, 0x0c, 0xca,
	0x90, 0xd8, 0x99, 0xcb, 0x90, 0xf8, 0xd8, 0x65, 0x48, 0xc9, 0xf3, 0xbd, 0x42, 0x62, 0xec, 0x4a,
	0xc0, 0xd9, 0xe4, 0x87, 0x30, 0xcb, 0xc8, 0x6f, 0x23, 0x8e, 0x5b, 0x8e, 0x02, 0x03, 0xb1, 0x20,
	0xff, 0xb7, 0x4b, 0x9f, 0xb7, 0x61, 0x75, 0x4f, 0xa3, 0xde, 0xf4, 0x38, 0x9a, 0x4d, 0xd2, 0x1f,
	0x45, 0x48, 0x05, 0xf5, 0x4f, 0xe1, 0xce, 0x85, 0x24, 0xf0, 0xd3, 0x13, 0x72, 0xec, 0x4c, 0x09,
	0x39, 0x7e, 0x7a, 0x42, 0x46, 0xb7, 0x21, 0xa5, 0x76, 0xb1, 0xfd, 0x52, 0xe0, 0x26, 0xf3, 0x65,
	0xb5, 0x8b, 0x59, 0x6d, 0xe6, 0xcd, 0xe4, 0xcf, 0x05, 0xe7, 0xda, 0xf3, 0x36, 0x48, 0x2f, 0x38,
	0x99, 0x4b, 0x1f, 0x3b, 0x57, 0xaa, 0xaf, 0x41, 0x99, 0x83, 0x49, 0xeb, 0xdb, 0x6a, 0xfb, 0x36,
	0x8d, 0xf4, 0xcd, 0xab, 0x62, 0xdb, 0x6e, 0x7c, 0x2e, 0x00, 0x0a, 0x76, 0x4a, 0xd0, 0x1b, 0xb0,
	0x56, 0xae, 0x6e, 0x97, 0x77, 0x14, 0xf9, 0xa0, 0x22, 0x97, 0x8a, 0xb5, 0xec, 0x0e, 0xfb, 0x53,
	0x2d, 0x96, 0x0f, 0xf2, 0x3b, 0xf2, 0xae, 0x9c, 0xcf, 0x25, 0x27, 0xd0, 0xeb, 0xf0, 0x1a, 0x4f,
	0xc9, 0x1e, 0xdb, 0xce, 0x27, 0x85, 0x53, 0x70, 0x1c, 0x25, 0x71, 0xe3, 0x8b, 0x61, 0x23, 0xd1,
	0xf3, 0xa4, 0x46, 0xd7, 0xe0, 0x75, 0x8f, 0xb5, 0x5c, 0xac, 0xe4, 0x95, 0xc3, 0xec, 0xbe, 0xcf,
	0x8f, 0xab, 0x70, 0x85, 0xaf, 0x56, 0x2a, 0xe6, 0x6b, 0x0f, 0xe4, 0x62, 0xb5, 0x62, 0xba, 0xf2,
	0x55, 0x90, 0xf8, 0x5a, 0xbb, 0xf2, 0xe1, 0x40, 0xad, 0x9c, 0x14, 0x37, 0xfe, 0x29, 0x7a, 0x23,
	0x62, 0xb3, 0xd8, 0xbf, 0x92, 0x72, 0x25, 0x5b, 0xa9, 0x96, 0x7d, 0x9e, 0xac, 0xc1, 0x2b, 0x3c,
	0xa5, 0x72, 0x75, 0x67, 0x27, 0x5f, 0x2e, 0x27, 0x05, 0x74, 0x1d, 0xd6, 0x79, 0x0a, 0x72, 0xb1,
	0x5c, 0x51, 0xaa, 0x0f, 0xf2, 0xc5, 0x4a, 0xad, 0x58, 0xaa, 0xd4, 0x76, 0x4b, 0xd5, 0x62, 0x2e,
	0x29, 0xa2, 0x77, 0x61, 0x93, 0x0f, 0x17, 0x8c, 0xa8, 0x6c, 0x82, 0x1c, 0x66, 0xf7, 0xe5, 0x5c,
	0x32, 0x86, 0xd6, 0xe1, 0x2a, 0xcf, 0x2e, 0x97, 0x3f, 0xa8, 0x14, 0xdc, 0x9a, 0x71, 0xf4, 0x16,
	0x7c, 0x8d, 0xef, 0x8f, 0x1d, 0x1b, 0x97, 0x72, 0x02, 0xbd, 0x09, 0xd7, 0x78, 0xca, 0xfb, 0xf2,
	0x03, 0xb9, 0x62, 0x6a, 0xe6, 0x3f, 0xda, 0xc9, 0xe7, 0x73, 0xf9, 0x5c, 0x72, 0x32, 0x10, 0x6c,
	0x37, 0x6e, 0x31, 0xbb, 0x5f, 0xcb, 0x2b, 0x4a, 0x49, 0x49, 0x4e, 0x6d, 0x34, 0x60, 0xde, 0xfb,
	0x30, 0x32, 0x43, 0x58, 0x51, 0xb2, 0xb9, 0x7c, 0x2d, 0x27, 0x2b, 0x79, 0x1e, 0xeb, 0x56, 0x61,
	0xd1, 0xaf, 0xb0, 0x5d, 0x7d, 0x94, 0x14, 0x50, 0x0a, 0x96, 0xfc, 0x82, 0x72, 0x7e, 0x7f, 0x3f,
	0x29, 0x6e, 0xfc, 0x41, 0x80, 0x79, 0x6f, 0x69, 0x6b, 0x4e, 0xb3, 0x93, 0x2d, 0xe6, 0xf6, 0xf3,
	0xa3, 0x48, 0x75, 0x19, 0x96, 0xfd, 0x0a, 0x37, 0x4d, 0x96, 0x24, 0x05, 0x9e, 0xe8, 0x16, 0x13,
	0x89, 0x28, 0x0d, 0x2b, 0x01, 0x2b, 0x4b, 0x16, 0x33, 0xfd, 0xf3, 0xcb, 0x0a, 0xa5, 0xaa, 0x92,
	0x8c, 0x9b, 0x4b, 0xf2, 0x4b, 0x72, 0xd9, 0x47, 0xc9, 0xc4, 0xe6, 0x9f, 0x3d, 0xbf, 0x2b, 0x2b,
	0x6b, 0xbd, 0x13, 0x33, 0x67, 0x7d, 0x2e, 0x00, 0x0c, 0xab, 0x71, 0x14, 0xf6, 0xbb, 0x86, 0xc0,
	0xc3, 0x24, 0x7d, 0x67, 0x0c, 0x4b, 0xfb, 0xf6, 0xf9, 0x81, 0x00, 0x73, 0x9e, 0x52, 0x0f, 0x6d,
	0x85, 0x07, 0x0b, 0x14, 0x93, 0xe9, 0xbb, 0xe3, 0x19, 0xdb, 0xce, 0x7c, 0x5f, 0x80, 0x4b, 0xee,
	0x7a, 0x09, 0xbd, 0x17, 0x1e, 0xce, 0x5f, 0xa6, 0xa5, 0xb7, 0xc6, 0xb2, 0xb5, 0x3d, 0xf9, 0x52,
	0x80, 0xa4, 0x3f, 0x03, 0xa3, 0x7b, 0xe1, 0x11, 0x79, 0xa9, 0x3e, 0x7d, 0x7f, 0x6c, 0xfb, 0xe0,
	0x66, 0x59, 0x49, 0x24, 0xea, 0x66, 0x79, 0x52, 0x60, 0xd4, 0xcd, 0xf2, 0xe6, 0xad, 0xcd, 0x5f,
	0x0a, 0xb0, 0xea, 0xe2, 0x34, 0xed, 0x69, 0x6a, 0x67, 0xc0, 0xec, 0x2f, 0x04, 0x48, 0xfa, 0x65,
	0xa1, 0xf9, 0x1d, 0xf8, 0x01, 0x66, 0x68, 0x7e, 0x07, 0x7f, 0x1f, 0xb7, 0x2e, 0xbc, 0x23, 0x6c,
	0xab, 0xf0, 0x6a, 0xaf, 0x3f, 0x84, 0xc0, 0x3e, 0xb3, 0x03, 0xe1, 0xdb, 0x97, 0x32, 0x37, 0xb6,
	0x2c, 0x4c, 0xb5, 0x8b, 0x7f, 0x2e, 0x26, 0x2a, 0x72, 0xf6, 0x40, 0xfe, 0x95, 0xb8, 0x54, 0xb1,
	0x6d, 0x64, 0x26, 0xcb, 0x76, 0x71, 0xe6, 0xf0, 0xe6, 0x9f, 0xc4, 0x05, 0x7b, 0xf8, 0xb1, 0x35,
	0xfc, 0xf8, 0xf0, 0xe6, 0xd1, 0x24, 0xcb, 0xfa, 0x5f, 0xff, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd5, 0x6f, 0x19, 0x7a, 0xa9, 0x2a, 0x00, 0x00,
}
