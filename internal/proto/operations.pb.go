// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operations.proto

package investapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Статус запрашиваемых операций.
type OperationState int32

const (
	OperationState_OPERATION_STATE_UNSPECIFIED OperationState = 0
	OperationState_OPERATION_STATE_EXECUTED    OperationState = 1
	OperationState_OPERATION_STATE_CANCELED    OperationState = 2
)

var OperationState_name = map[int32]string{
	0: "OPERATION_STATE_UNSPECIFIED",
	1: "OPERATION_STATE_EXECUTED",
	2: "OPERATION_STATE_CANCELED",
}

var OperationState_value = map[string]int32{
	"OPERATION_STATE_UNSPECIFIED": 0,
	"OPERATION_STATE_EXECUTED":    1,
	"OPERATION_STATE_CANCELED":    2,
}

func (x OperationState) String() string {
	return proto.EnumName(OperationState_name, int32(x))
}

func (OperationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{0}
}

//Тип операции.
type OperationType int32

const (
	OperationType_OPERATION_TYPE_UNSPECIFIED                 OperationType = 0
	OperationType_OPERATION_TYPE_INPUT                       OperationType = 1
	OperationType_OPERATION_TYPE_BOND_TAX                    OperationType = 2
	OperationType_OPERATION_TYPE_OUTPUT_SECURITIES           OperationType = 3
	OperationType_OPERATION_TYPE_OVERNIGHT                   OperationType = 4
	OperationType_OPERATION_TYPE_TAX                         OperationType = 5
	OperationType_OPERATION_TYPE_BOND_REPAYMENT_FULL         OperationType = 6
	OperationType_OPERATION_TYPE_SELL_CARD                   OperationType = 7
	OperationType_OPERATION_TYPE_DIVIDEND_TAX                OperationType = 8
	OperationType_OPERATION_TYPE_OUTPUT                      OperationType = 9
	OperationType_OPERATION_TYPE_BOND_REPAYMENT              OperationType = 10
	OperationType_OPERATION_TYPE_TAX_CORRECTION              OperationType = 11
	OperationType_OPERATION_TYPE_SERVICE_FEE                 OperationType = 12
	OperationType_OPERATION_TYPE_BENEFIT_TAX                 OperationType = 13
	OperationType_OPERATION_TYPE_MARGIN_FEE                  OperationType = 14
	OperationType_OPERATION_TYPE_BUY                         OperationType = 15
	OperationType_OPERATION_TYPE_BUY_CARD                    OperationType = 16
	OperationType_OPERATION_TYPE_INPUT_SECURITIES            OperationType = 17
	OperationType_OPERATION_TYPE_SELL_MARGIN                 OperationType = 18
	OperationType_OPERATION_TYPE_BROKER_FEE                  OperationType = 19
	OperationType_OPERATION_TYPE_BUY_MARGIN                  OperationType = 20
	OperationType_OPERATION_TYPE_DIVIDEND                    OperationType = 21
	OperationType_OPERATION_TYPE_SELL                        OperationType = 22
	OperationType_OPERATION_TYPE_COUPON                      OperationType = 23
	OperationType_OPERATION_TYPE_SUCCESS_FEE                 OperationType = 24
	OperationType_OPERATION_TYPE_DIVIDEND_TRANSFER           OperationType = 25
	OperationType_OPERATION_TYPE_ACCRUING_VARMARGIN          OperationType = 26
	OperationType_OPERATION_TYPE_WRITING_OFF_VARMARGIN       OperationType = 27
	OperationType_OPERATION_TYPE_DELIVERY_BUY                OperationType = 28
	OperationType_OPERATION_TYPE_DELIVERY_SELL               OperationType = 29
	OperationType_OPERATION_TYPE_TRACK_MFEE                  OperationType = 30
	OperationType_OPERATION_TYPE_TRACK_PFEE                  OperationType = 31
	OperationType_OPERATION_TYPE_TAX_PROGRESSIVE             OperationType = 32
	OperationType_OPERATION_TYPE_BOND_TAX_PROGRESSIVE        OperationType = 33
	OperationType_OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE    OperationType = 34
	OperationType_OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE     OperationType = 35
	OperationType_OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE  OperationType = 36
	OperationType_OPERATION_TYPE_TAX_REPO_PROGRESSIVE        OperationType = 37
	OperationType_OPERATION_TYPE_TAX_REPO                    OperationType = 38
	OperationType_OPERATION_TYPE_TAX_REPO_HOLD               OperationType = 39
	OperationType_OPERATION_TYPE_TAX_REPO_REFUND             OperationType = 40
	OperationType_OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE   OperationType = 41
	OperationType_OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE OperationType = 42
	OperationType_OPERATION_TYPE_DIV_EXT                     OperationType = 43
	OperationType_OPERATION_TYPE_TAX_CORRECTION_COUPON       OperationType = 44
)

var OperationType_name = map[int32]string{
	0:  "OPERATION_TYPE_UNSPECIFIED",
	1:  "OPERATION_TYPE_INPUT",
	2:  "OPERATION_TYPE_BOND_TAX",
	3:  "OPERATION_TYPE_OUTPUT_SECURITIES",
	4:  "OPERATION_TYPE_OVERNIGHT",
	5:  "OPERATION_TYPE_TAX",
	6:  "OPERATION_TYPE_BOND_REPAYMENT_FULL",
	7:  "OPERATION_TYPE_SELL_CARD",
	8:  "OPERATION_TYPE_DIVIDEND_TAX",
	9:  "OPERATION_TYPE_OUTPUT",
	10: "OPERATION_TYPE_BOND_REPAYMENT",
	11: "OPERATION_TYPE_TAX_CORRECTION",
	12: "OPERATION_TYPE_SERVICE_FEE",
	13: "OPERATION_TYPE_BENEFIT_TAX",
	14: "OPERATION_TYPE_MARGIN_FEE",
	15: "OPERATION_TYPE_BUY",
	16: "OPERATION_TYPE_BUY_CARD",
	17: "OPERATION_TYPE_INPUT_SECURITIES",
	18: "OPERATION_TYPE_SELL_MARGIN",
	19: "OPERATION_TYPE_BROKER_FEE",
	20: "OPERATION_TYPE_BUY_MARGIN",
	21: "OPERATION_TYPE_DIVIDEND",
	22: "OPERATION_TYPE_SELL",
	23: "OPERATION_TYPE_COUPON",
	24: "OPERATION_TYPE_SUCCESS_FEE",
	25: "OPERATION_TYPE_DIVIDEND_TRANSFER",
	26: "OPERATION_TYPE_ACCRUING_VARMARGIN",
	27: "OPERATION_TYPE_WRITING_OFF_VARMARGIN",
	28: "OPERATION_TYPE_DELIVERY_BUY",
	29: "OPERATION_TYPE_DELIVERY_SELL",
	30: "OPERATION_TYPE_TRACK_MFEE",
	31: "OPERATION_TYPE_TRACK_PFEE",
	32: "OPERATION_TYPE_TAX_PROGRESSIVE",
	33: "OPERATION_TYPE_BOND_TAX_PROGRESSIVE",
	34: "OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE",
	35: "OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE",
	36: "OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE",
	37: "OPERATION_TYPE_TAX_REPO_PROGRESSIVE",
	38: "OPERATION_TYPE_TAX_REPO",
	39: "OPERATION_TYPE_TAX_REPO_HOLD",
	40: "OPERATION_TYPE_TAX_REPO_REFUND",
	41: "OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE",
	42: "OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE",
	43: "OPERATION_TYPE_DIV_EXT",
	44: "OPERATION_TYPE_TAX_CORRECTION_COUPON",
}

var OperationType_value = map[string]int32{
	"OPERATION_TYPE_UNSPECIFIED":                 0,
	"OPERATION_TYPE_INPUT":                       1,
	"OPERATION_TYPE_BOND_TAX":                    2,
	"OPERATION_TYPE_OUTPUT_SECURITIES":           3,
	"OPERATION_TYPE_OVERNIGHT":                   4,
	"OPERATION_TYPE_TAX":                         5,
	"OPERATION_TYPE_BOND_REPAYMENT_FULL":         6,
	"OPERATION_TYPE_SELL_CARD":                   7,
	"OPERATION_TYPE_DIVIDEND_TAX":                8,
	"OPERATION_TYPE_OUTPUT":                      9,
	"OPERATION_TYPE_BOND_REPAYMENT":              10,
	"OPERATION_TYPE_TAX_CORRECTION":              11,
	"OPERATION_TYPE_SERVICE_FEE":                 12,
	"OPERATION_TYPE_BENEFIT_TAX":                 13,
	"OPERATION_TYPE_MARGIN_FEE":                  14,
	"OPERATION_TYPE_BUY":                         15,
	"OPERATION_TYPE_BUY_CARD":                    16,
	"OPERATION_TYPE_INPUT_SECURITIES":            17,
	"OPERATION_TYPE_SELL_MARGIN":                 18,
	"OPERATION_TYPE_BROKER_FEE":                  19,
	"OPERATION_TYPE_BUY_MARGIN":                  20,
	"OPERATION_TYPE_DIVIDEND":                    21,
	"OPERATION_TYPE_SELL":                        22,
	"OPERATION_TYPE_COUPON":                      23,
	"OPERATION_TYPE_SUCCESS_FEE":                 24,
	"OPERATION_TYPE_DIVIDEND_TRANSFER":           25,
	"OPERATION_TYPE_ACCRUING_VARMARGIN":          26,
	"OPERATION_TYPE_WRITING_OFF_VARMARGIN":       27,
	"OPERATION_TYPE_DELIVERY_BUY":                28,
	"OPERATION_TYPE_DELIVERY_SELL":               29,
	"OPERATION_TYPE_TRACK_MFEE":                  30,
	"OPERATION_TYPE_TRACK_PFEE":                  31,
	"OPERATION_TYPE_TAX_PROGRESSIVE":             32,
	"OPERATION_TYPE_BOND_TAX_PROGRESSIVE":        33,
	"OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE":    34,
	"OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE":     35,
	"OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE":  36,
	"OPERATION_TYPE_TAX_REPO_PROGRESSIVE":        37,
	"OPERATION_TYPE_TAX_REPO":                    38,
	"OPERATION_TYPE_TAX_REPO_HOLD":               39,
	"OPERATION_TYPE_TAX_REPO_REFUND":             40,
	"OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE":   41,
	"OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE": 42,
	"OPERATION_TYPE_DIV_EXT":                     43,
	"OPERATION_TYPE_TAX_CORRECTION_COUPON":       44,
}

func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}

func (OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{1}
}

//Запрос получения списка операций по счёту.
type OperationsRequest struct {
	AccountId            string               `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	State                OperationState       `protobuf:"varint,4,opt,name=state,proto3,enum=tinkoff.public.invest.api.contract.v1.OperationState" json:"state,omitempty"`
	Figi                 string               `protobuf:"bytes,5,opt,name=figi,proto3" json:"figi,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OperationsRequest) Reset()         { *m = OperationsRequest{} }
func (m *OperationsRequest) String() string { return proto.CompactTextString(m) }
func (*OperationsRequest) ProtoMessage()    {}
func (*OperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{0}
}

func (m *OperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationsRequest.Unmarshal(m, b)
}
func (m *OperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationsRequest.Marshal(b, m, deterministic)
}
func (m *OperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationsRequest.Merge(m, src)
}
func (m *OperationsRequest) XXX_Size() int {
	return xxx_messageInfo_OperationsRequest.Size(m)
}
func (m *OperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OperationsRequest proto.InternalMessageInfo

func (m *OperationsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *OperationsRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *OperationsRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *OperationsRequest) GetState() OperationState {
	if m != nil {
		return m.State
	}
	return OperationState_OPERATION_STATE_UNSPECIFIED
}

func (m *OperationsRequest) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

//Список операций.
type OperationsResponse struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OperationsResponse) Reset()         { *m = OperationsResponse{} }
func (m *OperationsResponse) String() string { return proto.CompactTextString(m) }
func (*OperationsResponse) ProtoMessage()    {}
func (*OperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{1}
}

func (m *OperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationsResponse.Unmarshal(m, b)
}
func (m *OperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationsResponse.Marshal(b, m, deterministic)
}
func (m *OperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationsResponse.Merge(m, src)
}
func (m *OperationsResponse) XXX_Size() int {
	return xxx_messageInfo_OperationsResponse.Size(m)
}
func (m *OperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OperationsResponse proto.InternalMessageInfo

func (m *OperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

//Данные по операции.
type Operation struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentOperationId    string               `protobuf:"bytes,2,opt,name=parent_operation_id,json=parentOperationId,proto3" json:"parent_operation_id,omitempty"`
	Currency             string               `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Payment              *MoneyValue          `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	Price                *MoneyValue          `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	State                OperationState       `protobuf:"varint,6,opt,name=state,proto3,enum=tinkoff.public.invest.api.contract.v1.OperationState" json:"state,omitempty"`
	Quantity             int64                `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	QuantityRest         int64                `protobuf:"varint,8,opt,name=quantity_rest,json=quantityRest,proto3" json:"quantity_rest,omitempty"`
	Figi                 string               `protobuf:"bytes,9,opt,name=figi,proto3" json:"figi,omitempty"`
	InstrumentType       string               `protobuf:"bytes,10,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
	Type                 string               `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	OperationType        OperationType        `protobuf:"varint,13,opt,name=operation_type,json=operationType,proto3,enum=tinkoff.public.invest.api.contract.v1.OperationType" json:"operation_type,omitempty"`
	Trades               []*OperationTrade    `protobuf:"bytes,14,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{2}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Operation) GetParentOperationId() string {
	if m != nil {
		return m.ParentOperationId
	}
	return ""
}

func (m *Operation) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Operation) GetPayment() *MoneyValue {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *Operation) GetPrice() *MoneyValue {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Operation) GetState() OperationState {
	if m != nil {
		return m.State
	}
	return OperationState_OPERATION_STATE_UNSPECIFIED
}

func (m *Operation) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Operation) GetQuantityRest() int64 {
	if m != nil {
		return m.QuantityRest
	}
	return 0
}

func (m *Operation) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *Operation) GetInstrumentType() string {
	if m != nil {
		return m.InstrumentType
	}
	return ""
}

func (m *Operation) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Operation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Operation) GetOperationType() OperationType {
	if m != nil {
		return m.OperationType
	}
	return OperationType_OPERATION_TYPE_UNSPECIFIED
}

func (m *Operation) GetTrades() []*OperationTrade {
	if m != nil {
		return m.Trades
	}
	return nil
}

//Сделка по операции.
type OperationTrade struct {
	TradeId              string               `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	DateTime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Quantity             int64                `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                *MoneyValue          `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OperationTrade) Reset()         { *m = OperationTrade{} }
func (m *OperationTrade) String() string { return proto.CompactTextString(m) }
func (*OperationTrade) ProtoMessage()    {}
func (*OperationTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{3}
}

func (m *OperationTrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationTrade.Unmarshal(m, b)
}
func (m *OperationTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationTrade.Marshal(b, m, deterministic)
}
func (m *OperationTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationTrade.Merge(m, src)
}
func (m *OperationTrade) XXX_Size() int {
	return xxx_messageInfo_OperationTrade.Size(m)
}
func (m *OperationTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationTrade.DiscardUnknown(m)
}

var xxx_messageInfo_OperationTrade proto.InternalMessageInfo

func (m *OperationTrade) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *OperationTrade) GetDateTime() *timestamp.Timestamp {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func (m *OperationTrade) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OperationTrade) GetPrice() *MoneyValue {
	if m != nil {
		return m.Price
	}
	return nil
}

//Запрос получения текущего портфеля по счёту.
type PortfolioRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortfolioRequest) Reset()         { *m = PortfolioRequest{} }
func (m *PortfolioRequest) String() string { return proto.CompactTextString(m) }
func (*PortfolioRequest) ProtoMessage()    {}
func (*PortfolioRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{4}
}

func (m *PortfolioRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortfolioRequest.Unmarshal(m, b)
}
func (m *PortfolioRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortfolioRequest.Marshal(b, m, deterministic)
}
func (m *PortfolioRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortfolioRequest.Merge(m, src)
}
func (m *PortfolioRequest) XXX_Size() int {
	return xxx_messageInfo_PortfolioRequest.Size(m)
}
func (m *PortfolioRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PortfolioRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PortfolioRequest proto.InternalMessageInfo

func (m *PortfolioRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

//Текущий портфель по счёту.
type PortfolioResponse struct {
	TotalAmountShares     *MoneyValue          `protobuf:"bytes,1,opt,name=total_amount_shares,json=totalAmountShares,proto3" json:"total_amount_shares,omitempty"`
	TotalAmountBonds      *MoneyValue          `protobuf:"bytes,2,opt,name=total_amount_bonds,json=totalAmountBonds,proto3" json:"total_amount_bonds,omitempty"`
	TotalAmountEtf        *MoneyValue          `protobuf:"bytes,3,opt,name=total_amount_etf,json=totalAmountEtf,proto3" json:"total_amount_etf,omitempty"`
	TotalAmountCurrencies *MoneyValue          `protobuf:"bytes,4,opt,name=total_amount_currencies,json=totalAmountCurrencies,proto3" json:"total_amount_currencies,omitempty"`
	TotalAmountFutures    *MoneyValue          `protobuf:"bytes,5,opt,name=total_amount_futures,json=totalAmountFutures,proto3" json:"total_amount_futures,omitempty"`
	ExpectedYield         *Quotation           `protobuf:"bytes,6,opt,name=expected_yield,json=expectedYield,proto3" json:"expected_yield,omitempty"`
	Positions             []*PortfolioPosition `protobuf:"bytes,7,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *PortfolioResponse) Reset()         { *m = PortfolioResponse{} }
func (m *PortfolioResponse) String() string { return proto.CompactTextString(m) }
func (*PortfolioResponse) ProtoMessage()    {}
func (*PortfolioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{5}
}

func (m *PortfolioResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortfolioResponse.Unmarshal(m, b)
}
func (m *PortfolioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortfolioResponse.Marshal(b, m, deterministic)
}
func (m *PortfolioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortfolioResponse.Merge(m, src)
}
func (m *PortfolioResponse) XXX_Size() int {
	return xxx_messageInfo_PortfolioResponse.Size(m)
}
func (m *PortfolioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PortfolioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PortfolioResponse proto.InternalMessageInfo

func (m *PortfolioResponse) GetTotalAmountShares() *MoneyValue {
	if m != nil {
		return m.TotalAmountShares
	}
	return nil
}

func (m *PortfolioResponse) GetTotalAmountBonds() *MoneyValue {
	if m != nil {
		return m.TotalAmountBonds
	}
	return nil
}

func (m *PortfolioResponse) GetTotalAmountEtf() *MoneyValue {
	if m != nil {
		return m.TotalAmountEtf
	}
	return nil
}

func (m *PortfolioResponse) GetTotalAmountCurrencies() *MoneyValue {
	if m != nil {
		return m.TotalAmountCurrencies
	}
	return nil
}

func (m *PortfolioResponse) GetTotalAmountFutures() *MoneyValue {
	if m != nil {
		return m.TotalAmountFutures
	}
	return nil
}

func (m *PortfolioResponse) GetExpectedYield() *Quotation {
	if m != nil {
		return m.ExpectedYield
	}
	return nil
}

func (m *PortfolioResponse) GetPositions() []*PortfolioPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

//Запрос позиций портфеля по счёту.
type PositionsRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsRequest) Reset()         { *m = PositionsRequest{} }
func (m *PositionsRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsRequest) ProtoMessage()    {}
func (*PositionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{6}
}

func (m *PositionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsRequest.Unmarshal(m, b)
}
func (m *PositionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsRequest.Marshal(b, m, deterministic)
}
func (m *PositionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsRequest.Merge(m, src)
}
func (m *PositionsRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsRequest.Size(m)
}
func (m *PositionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsRequest proto.InternalMessageInfo

func (m *PositionsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

//Список позиций по счёту.
type PositionsResponse struct {
	Money                   []*MoneyValue          `protobuf:"bytes,1,rep,name=money,proto3" json:"money,omitempty"`
	Blocked                 []*MoneyValue          `protobuf:"bytes,2,rep,name=blocked,proto3" json:"blocked,omitempty"`
	Securities              []*PositionsSecurities `protobuf:"bytes,3,rep,name=securities,proto3" json:"securities,omitempty"`
	LimitsLoadingInProgress bool                   `protobuf:"varint,4,opt,name=limits_loading_in_progress,json=limitsLoadingInProgress,proto3" json:"limits_loading_in_progress,omitempty"`
	Futures                 []*PositionsFutures    `protobuf:"bytes,5,rep,name=futures,proto3" json:"futures,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}               `json:"-"`
	XXX_unrecognized        []byte                 `json:"-"`
	XXX_sizecache           int32                  `json:"-"`
}

func (m *PositionsResponse) Reset()         { *m = PositionsResponse{} }
func (m *PositionsResponse) String() string { return proto.CompactTextString(m) }
func (*PositionsResponse) ProtoMessage()    {}
func (*PositionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{7}
}

func (m *PositionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsResponse.Unmarshal(m, b)
}
func (m *PositionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsResponse.Marshal(b, m, deterministic)
}
func (m *PositionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsResponse.Merge(m, src)
}
func (m *PositionsResponse) XXX_Size() int {
	return xxx_messageInfo_PositionsResponse.Size(m)
}
func (m *PositionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsResponse proto.InternalMessageInfo

func (m *PositionsResponse) GetMoney() []*MoneyValue {
	if m != nil {
		return m.Money
	}
	return nil
}

func (m *PositionsResponse) GetBlocked() []*MoneyValue {
	if m != nil {
		return m.Blocked
	}
	return nil
}

func (m *PositionsResponse) GetSecurities() []*PositionsSecurities {
	if m != nil {
		return m.Securities
	}
	return nil
}

func (m *PositionsResponse) GetLimitsLoadingInProgress() bool {
	if m != nil {
		return m.LimitsLoadingInProgress
	}
	return false
}

func (m *PositionsResponse) GetFutures() []*PositionsFutures {
	if m != nil {
		return m.Futures
	}
	return nil
}

//Запрос доступного для вывода остатка.
type WithdrawLimitsRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawLimitsRequest) Reset()         { *m = WithdrawLimitsRequest{} }
func (m *WithdrawLimitsRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawLimitsRequest) ProtoMessage()    {}
func (*WithdrawLimitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{8}
}

func (m *WithdrawLimitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawLimitsRequest.Unmarshal(m, b)
}
func (m *WithdrawLimitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawLimitsRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawLimitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawLimitsRequest.Merge(m, src)
}
func (m *WithdrawLimitsRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawLimitsRequest.Size(m)
}
func (m *WithdrawLimitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawLimitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawLimitsRequest proto.InternalMessageInfo

func (m *WithdrawLimitsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

//Доступный для вывода остаток.
type WithdrawLimitsResponse struct {
	Money                []*MoneyValue `protobuf:"bytes,1,rep,name=money,proto3" json:"money,omitempty"`
	Blocked              []*MoneyValue `protobuf:"bytes,2,rep,name=blocked,proto3" json:"blocked,omitempty"`
	BlockedGuarantee     []*MoneyValue `protobuf:"bytes,3,rep,name=blocked_guarantee,json=blockedGuarantee,proto3" json:"blocked_guarantee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WithdrawLimitsResponse) Reset()         { *m = WithdrawLimitsResponse{} }
func (m *WithdrawLimitsResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawLimitsResponse) ProtoMessage()    {}
func (*WithdrawLimitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{9}
}

func (m *WithdrawLimitsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawLimitsResponse.Unmarshal(m, b)
}
func (m *WithdrawLimitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawLimitsResponse.Marshal(b, m, deterministic)
}
func (m *WithdrawLimitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawLimitsResponse.Merge(m, src)
}
func (m *WithdrawLimitsResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawLimitsResponse.Size(m)
}
func (m *WithdrawLimitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawLimitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawLimitsResponse proto.InternalMessageInfo

func (m *WithdrawLimitsResponse) GetMoney() []*MoneyValue {
	if m != nil {
		return m.Money
	}
	return nil
}

func (m *WithdrawLimitsResponse) GetBlocked() []*MoneyValue {
	if m != nil {
		return m.Blocked
	}
	return nil
}

func (m *WithdrawLimitsResponse) GetBlockedGuarantee() []*MoneyValue {
	if m != nil {
		return m.BlockedGuarantee
	}
	return nil
}

//Позиции портфеля.
type PortfolioPosition struct {
	Figi                     string      `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	InstrumentType           string      `protobuf:"bytes,2,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	Quantity                 *Quotation  `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AveragePositionPrice     *MoneyValue `protobuf:"bytes,4,opt,name=average_position_price,json=averagePositionPrice,proto3" json:"average_position_price,omitempty"`
	ExpectedYield            *Quotation  `protobuf:"bytes,5,opt,name=expected_yield,json=expectedYield,proto3" json:"expected_yield,omitempty"`
	CurrentNkd               *MoneyValue `protobuf:"bytes,6,opt,name=current_nkd,json=currentNkd,proto3" json:"current_nkd,omitempty"`
	AveragePositionPricePt   *Quotation  `protobuf:"bytes,7,opt,name=average_position_price_pt,json=averagePositionPricePt,proto3" json:"average_position_price_pt,omitempty"`
	CurrentPrice             *MoneyValue `protobuf:"bytes,8,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	AveragePositionPriceFifo *MoneyValue `protobuf:"bytes,9,opt,name=average_position_price_fifo,json=averagePositionPriceFifo,proto3" json:"average_position_price_fifo,omitempty"`
	QuantityLots             *Quotation  `protobuf:"bytes,10,opt,name=quantity_lots,json=quantityLots,proto3" json:"quantity_lots,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}    `json:"-"`
	XXX_unrecognized         []byte      `json:"-"`
	XXX_sizecache            int32       `json:"-"`
}

func (m *PortfolioPosition) Reset()         { *m = PortfolioPosition{} }
func (m *PortfolioPosition) String() string { return proto.CompactTextString(m) }
func (*PortfolioPosition) ProtoMessage()    {}
func (*PortfolioPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{10}
}

func (m *PortfolioPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortfolioPosition.Unmarshal(m, b)
}
func (m *PortfolioPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortfolioPosition.Marshal(b, m, deterministic)
}
func (m *PortfolioPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortfolioPosition.Merge(m, src)
}
func (m *PortfolioPosition) XXX_Size() int {
	return xxx_messageInfo_PortfolioPosition.Size(m)
}
func (m *PortfolioPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_PortfolioPosition.DiscardUnknown(m)
}

var xxx_messageInfo_PortfolioPosition proto.InternalMessageInfo

func (m *PortfolioPosition) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *PortfolioPosition) GetInstrumentType() string {
	if m != nil {
		return m.InstrumentType
	}
	return ""
}

func (m *PortfolioPosition) GetQuantity() *Quotation {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *PortfolioPosition) GetAveragePositionPrice() *MoneyValue {
	if m != nil {
		return m.AveragePositionPrice
	}
	return nil
}

func (m *PortfolioPosition) GetExpectedYield() *Quotation {
	if m != nil {
		return m.ExpectedYield
	}
	return nil
}

func (m *PortfolioPosition) GetCurrentNkd() *MoneyValue {
	if m != nil {
		return m.CurrentNkd
	}
	return nil
}

func (m *PortfolioPosition) GetAveragePositionPricePt() *Quotation {
	if m != nil {
		return m.AveragePositionPricePt
	}
	return nil
}

func (m *PortfolioPosition) GetCurrentPrice() *MoneyValue {
	if m != nil {
		return m.CurrentPrice
	}
	return nil
}

func (m *PortfolioPosition) GetAveragePositionPriceFifo() *MoneyValue {
	if m != nil {
		return m.AveragePositionPriceFifo
	}
	return nil
}

func (m *PortfolioPosition) GetQuantityLots() *Quotation {
	if m != nil {
		return m.QuantityLots
	}
	return nil
}

//Баланс позиции ценной бумаги.
type PositionsSecurities struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Blocked              int64    `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Balance              int64    `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsSecurities) Reset()         { *m = PositionsSecurities{} }
func (m *PositionsSecurities) String() string { return proto.CompactTextString(m) }
func (*PositionsSecurities) ProtoMessage()    {}
func (*PositionsSecurities) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{11}
}

func (m *PositionsSecurities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsSecurities.Unmarshal(m, b)
}
func (m *PositionsSecurities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsSecurities.Marshal(b, m, deterministic)
}
func (m *PositionsSecurities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsSecurities.Merge(m, src)
}
func (m *PositionsSecurities) XXX_Size() int {
	return xxx_messageInfo_PositionsSecurities.Size(m)
}
func (m *PositionsSecurities) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsSecurities.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsSecurities proto.InternalMessageInfo

func (m *PositionsSecurities) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *PositionsSecurities) GetBlocked() int64 {
	if m != nil {
		return m.Blocked
	}
	return 0
}

func (m *PositionsSecurities) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

//Баланс фьючерса.
type PositionsFutures struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Blocked              int64    `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Balance              int64    `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsFutures) Reset()         { *m = PositionsFutures{} }
func (m *PositionsFutures) String() string { return proto.CompactTextString(m) }
func (*PositionsFutures) ProtoMessage()    {}
func (*PositionsFutures) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{12}
}

func (m *PositionsFutures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsFutures.Unmarshal(m, b)
}
func (m *PositionsFutures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsFutures.Marshal(b, m, deterministic)
}
func (m *PositionsFutures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsFutures.Merge(m, src)
}
func (m *PositionsFutures) XXX_Size() int {
	return xxx_messageInfo_PositionsFutures.Size(m)
}
func (m *PositionsFutures) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsFutures.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsFutures proto.InternalMessageInfo

func (m *PositionsFutures) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *PositionsFutures) GetBlocked() int64 {
	if m != nil {
		return m.Blocked
	}
	return 0
}

func (m *PositionsFutures) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type BrokerReportRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*BrokerReportRequest_GenerateBrokerReportRequest
	//	*BrokerReportRequest_GetBrokerReportRequest
	Payload              isBrokerReportRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BrokerReportRequest) Reset()         { *m = BrokerReportRequest{} }
func (m *BrokerReportRequest) String() string { return proto.CompactTextString(m) }
func (*BrokerReportRequest) ProtoMessage()    {}
func (*BrokerReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{13}
}

func (m *BrokerReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerReportRequest.Unmarshal(m, b)
}
func (m *BrokerReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerReportRequest.Marshal(b, m, deterministic)
}
func (m *BrokerReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerReportRequest.Merge(m, src)
}
func (m *BrokerReportRequest) XXX_Size() int {
	return xxx_messageInfo_BrokerReportRequest.Size(m)
}
func (m *BrokerReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerReportRequest proto.InternalMessageInfo

type isBrokerReportRequest_Payload interface {
	isBrokerReportRequest_Payload()
}

type BrokerReportRequest_GenerateBrokerReportRequest struct {
	GenerateBrokerReportRequest *GenerateBrokerReportRequest `protobuf:"bytes,1,opt,name=generate_broker_report_request,json=generateBrokerReportRequest,proto3,oneof"`
}

type BrokerReportRequest_GetBrokerReportRequest struct {
	GetBrokerReportRequest *GetBrokerReportRequest `protobuf:"bytes,2,opt,name=get_broker_report_request,json=getBrokerReportRequest,proto3,oneof"`
}

func (*BrokerReportRequest_GenerateBrokerReportRequest) isBrokerReportRequest_Payload() {}

func (*BrokerReportRequest_GetBrokerReportRequest) isBrokerReportRequest_Payload() {}

func (m *BrokerReportRequest) GetPayload() isBrokerReportRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BrokerReportRequest) GetGenerateBrokerReportRequest() *GenerateBrokerReportRequest {
	if x, ok := m.GetPayload().(*BrokerReportRequest_GenerateBrokerReportRequest); ok {
		return x.GenerateBrokerReportRequest
	}
	return nil
}

func (m *BrokerReportRequest) GetGetBrokerReportRequest() *GetBrokerReportRequest {
	if x, ok := m.GetPayload().(*BrokerReportRequest_GetBrokerReportRequest); ok {
		return x.GetBrokerReportRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BrokerReportRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BrokerReportRequest_GenerateBrokerReportRequest)(nil),
		(*BrokerReportRequest_GetBrokerReportRequest)(nil),
	}
}

type BrokerReportResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*BrokerReportResponse_GenerateBrokerReportResponse
	//	*BrokerReportResponse_GetBrokerReportResponse
	Payload              isBrokerReportResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BrokerReportResponse) Reset()         { *m = BrokerReportResponse{} }
func (m *BrokerReportResponse) String() string { return proto.CompactTextString(m) }
func (*BrokerReportResponse) ProtoMessage()    {}
func (*BrokerReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{14}
}

func (m *BrokerReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerReportResponse.Unmarshal(m, b)
}
func (m *BrokerReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerReportResponse.Marshal(b, m, deterministic)
}
func (m *BrokerReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerReportResponse.Merge(m, src)
}
func (m *BrokerReportResponse) XXX_Size() int {
	return xxx_messageInfo_BrokerReportResponse.Size(m)
}
func (m *BrokerReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerReportResponse proto.InternalMessageInfo

type isBrokerReportResponse_Payload interface {
	isBrokerReportResponse_Payload()
}

type BrokerReportResponse_GenerateBrokerReportResponse struct {
	GenerateBrokerReportResponse *GenerateBrokerReportResponse `protobuf:"bytes,1,opt,name=generate_broker_report_response,json=generateBrokerReportResponse,proto3,oneof"`
}

type BrokerReportResponse_GetBrokerReportResponse struct {
	GetBrokerReportResponse *GetBrokerReportResponse `protobuf:"bytes,2,opt,name=get_broker_report_response,json=getBrokerReportResponse,proto3,oneof"`
}

func (*BrokerReportResponse_GenerateBrokerReportResponse) isBrokerReportResponse_Payload() {}

func (*BrokerReportResponse_GetBrokerReportResponse) isBrokerReportResponse_Payload() {}

func (m *BrokerReportResponse) GetPayload() isBrokerReportResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BrokerReportResponse) GetGenerateBrokerReportResponse() *GenerateBrokerReportResponse {
	if x, ok := m.GetPayload().(*BrokerReportResponse_GenerateBrokerReportResponse); ok {
		return x.GenerateBrokerReportResponse
	}
	return nil
}

func (m *BrokerReportResponse) GetGetBrokerReportResponse() *GetBrokerReportResponse {
	if x, ok := m.GetPayload().(*BrokerReportResponse_GetBrokerReportResponse); ok {
		return x.GetBrokerReportResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BrokerReportResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BrokerReportResponse_GenerateBrokerReportResponse)(nil),
		(*BrokerReportResponse_GetBrokerReportResponse)(nil),
	}
}

type GenerateBrokerReportRequest struct {
	AccountId            string               `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GenerateBrokerReportRequest) Reset()         { *m = GenerateBrokerReportRequest{} }
func (m *GenerateBrokerReportRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateBrokerReportRequest) ProtoMessage()    {}
func (*GenerateBrokerReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{15}
}

func (m *GenerateBrokerReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateBrokerReportRequest.Unmarshal(m, b)
}
func (m *GenerateBrokerReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateBrokerReportRequest.Marshal(b, m, deterministic)
}
func (m *GenerateBrokerReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateBrokerReportRequest.Merge(m, src)
}
func (m *GenerateBrokerReportRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateBrokerReportRequest.Size(m)
}
func (m *GenerateBrokerReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateBrokerReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateBrokerReportRequest proto.InternalMessageInfo

func (m *GenerateBrokerReportRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GenerateBrokerReportRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GenerateBrokerReportRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

type GenerateBrokerReportResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateBrokerReportResponse) Reset()         { *m = GenerateBrokerReportResponse{} }
func (m *GenerateBrokerReportResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateBrokerReportResponse) ProtoMessage()    {}
func (*GenerateBrokerReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{16}
}

func (m *GenerateBrokerReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateBrokerReportResponse.Unmarshal(m, b)
}
func (m *GenerateBrokerReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateBrokerReportResponse.Marshal(b, m, deterministic)
}
func (m *GenerateBrokerReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateBrokerReportResponse.Merge(m, src)
}
func (m *GenerateBrokerReportResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateBrokerReportResponse.Size(m)
}
func (m *GenerateBrokerReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateBrokerReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateBrokerReportResponse proto.InternalMessageInfo

func (m *GenerateBrokerReportResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetBrokerReportRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrokerReportRequest) Reset()         { *m = GetBrokerReportRequest{} }
func (m *GetBrokerReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrokerReportRequest) ProtoMessage()    {}
func (*GetBrokerReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{17}
}

func (m *GetBrokerReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrokerReportRequest.Unmarshal(m, b)
}
func (m *GetBrokerReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrokerReportRequest.Marshal(b, m, deterministic)
}
func (m *GetBrokerReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrokerReportRequest.Merge(m, src)
}
func (m *GetBrokerReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrokerReportRequest.Size(m)
}
func (m *GetBrokerReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrokerReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrokerReportRequest proto.InternalMessageInfo

func (m *GetBrokerReportRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *GetBrokerReportRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetBrokerReportResponse struct {
	BrokerReport         []*BrokerReport `protobuf:"bytes,1,rep,name=broker_report,json=brokerReport,proto3" json:"broker_report,omitempty"`
	ItemsCount           int32           `protobuf:"varint,2,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
	PagesCount           int32           `protobuf:"varint,3,opt,name=pagesCount,proto3" json:"pagesCount,omitempty"`
	Page                 int32           `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetBrokerReportResponse) Reset()         { *m = GetBrokerReportResponse{} }
func (m *GetBrokerReportResponse) String() string { return proto.CompactTextString(m) }
func (*GetBrokerReportResponse) ProtoMessage()    {}
func (*GetBrokerReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{18}
}

func (m *GetBrokerReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrokerReportResponse.Unmarshal(m, b)
}
func (m *GetBrokerReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrokerReportResponse.Marshal(b, m, deterministic)
}
func (m *GetBrokerReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrokerReportResponse.Merge(m, src)
}
func (m *GetBrokerReportResponse) XXX_Size() int {
	return xxx_messageInfo_GetBrokerReportResponse.Size(m)
}
func (m *GetBrokerReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrokerReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrokerReportResponse proto.InternalMessageInfo

func (m *GetBrokerReportResponse) GetBrokerReport() []*BrokerReport {
	if m != nil {
		return m.BrokerReport
	}
	return nil
}

func (m *GetBrokerReportResponse) GetItemsCount() int32 {
	if m != nil {
		return m.ItemsCount
	}
	return 0
}

func (m *GetBrokerReportResponse) GetPagesCount() int32 {
	if m != nil {
		return m.PagesCount
	}
	return 0
}

func (m *GetBrokerReportResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BrokerReport struct {
	TradeId                    string               `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	OrderId                    string               `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Figi                       string               `protobuf:"bytes,3,opt,name=figi,proto3" json:"figi,omitempty"`
	ExecuteSign                string               `protobuf:"bytes,4,opt,name=execute_sign,json=executeSign,proto3" json:"execute_sign,omitempty"`
	TradeDatetime              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=trade_datetime,json=tradeDatetime,proto3" json:"trade_datetime,omitempty"`
	Exchange                   string               `protobuf:"bytes,6,opt,name=exchange,proto3" json:"exchange,omitempty"`
	ClassCode                  string               `protobuf:"bytes,7,opt,name=class_code,json=classCode,proto3" json:"class_code,omitempty"`
	Direction                  string               `protobuf:"bytes,8,opt,name=direction,proto3" json:"direction,omitempty"`
	Name                       string               `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Ticker                     string               `protobuf:"bytes,10,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Price                      *MoneyValue          `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`
	Quantity                   int64                `protobuf:"varint,12,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderAmount                *MoneyValue          `protobuf:"bytes,13,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`
	AciValue                   *Quotation           `protobuf:"bytes,14,opt,name=aci_value,json=aciValue,proto3" json:"aci_value,omitempty"`
	TotalOrderAmount           *MoneyValue          `protobuf:"bytes,15,opt,name=total_order_amount,json=totalOrderAmount,proto3" json:"total_order_amount,omitempty"`
	BrokerCommission           *MoneyValue          `protobuf:"bytes,16,opt,name=broker_commission,json=brokerCommission,proto3" json:"broker_commission,omitempty"`
	ExchangeCommission         *MoneyValue          `protobuf:"bytes,17,opt,name=exchange_commission,json=exchangeCommission,proto3" json:"exchange_commission,omitempty"`
	ExchangeClearingCommission *MoneyValue          `protobuf:"bytes,18,opt,name=exchange_clearing_commission,json=exchangeClearingCommission,proto3" json:"exchange_clearing_commission,omitempty"`
	RepoRate                   *Quotation           `protobuf:"bytes,19,opt,name=repo_rate,json=repoRate,proto3" json:"repo_rate,omitempty"`
	Party                      string               `protobuf:"bytes,20,opt,name=party,proto3" json:"party,omitempty"`
	ClearValueDate             *timestamp.Timestamp `protobuf:"bytes,21,opt,name=clear_value_date,json=clearValueDate,proto3" json:"clear_value_date,omitempty"`
	SecValueDate               *timestamp.Timestamp `protobuf:"bytes,22,opt,name=sec_value_date,json=secValueDate,proto3" json:"sec_value_date,omitempty"`
	BrokerStatus               string               `protobuf:"bytes,23,opt,name=broker_status,json=brokerStatus,proto3" json:"broker_status,omitempty"`
	SeparateAgreementType      string               `protobuf:"bytes,24,opt,name=separate_agreement_type,json=separateAgreementType,proto3" json:"separate_agreement_type,omitempty"`
	SeparateAgreementNumber    string               `protobuf:"bytes,25,opt,name=separate_agreement_number,json=separateAgreementNumber,proto3" json:"separate_agreement_number,omitempty"`
	SeparateAgreementDate      string               `protobuf:"bytes,26,opt,name=separate_agreement_date,json=separateAgreementDate,proto3" json:"separate_agreement_date,omitempty"`
	DeliveryType               string               `protobuf:"bytes,27,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *BrokerReport) Reset()         { *m = BrokerReport{} }
func (m *BrokerReport) String() string { return proto.CompactTextString(m) }
func (*BrokerReport) ProtoMessage()    {}
func (*BrokerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{19}
}

func (m *BrokerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerReport.Unmarshal(m, b)
}
func (m *BrokerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerReport.Marshal(b, m, deterministic)
}
func (m *BrokerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerReport.Merge(m, src)
}
func (m *BrokerReport) XXX_Size() int {
	return xxx_messageInfo_BrokerReport.Size(m)
}
func (m *BrokerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerReport.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerReport proto.InternalMessageInfo

func (m *BrokerReport) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *BrokerReport) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *BrokerReport) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *BrokerReport) GetExecuteSign() string {
	if m != nil {
		return m.ExecuteSign
	}
	return ""
}

func (m *BrokerReport) GetTradeDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.TradeDatetime
	}
	return nil
}

func (m *BrokerReport) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *BrokerReport) GetClassCode() string {
	if m != nil {
		return m.ClassCode
	}
	return ""
}

func (m *BrokerReport) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *BrokerReport) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrokerReport) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *BrokerReport) GetPrice() *MoneyValue {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *BrokerReport) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *BrokerReport) GetOrderAmount() *MoneyValue {
	if m != nil {
		return m.OrderAmount
	}
	return nil
}

func (m *BrokerReport) GetAciValue() *Quotation {
	if m != nil {
		return m.AciValue
	}
	return nil
}

func (m *BrokerReport) GetTotalOrderAmount() *MoneyValue {
	if m != nil {
		return m.TotalOrderAmount
	}
	return nil
}

func (m *BrokerReport) GetBrokerCommission() *MoneyValue {
	if m != nil {
		return m.BrokerCommission
	}
	return nil
}

func (m *BrokerReport) GetExchangeCommission() *MoneyValue {
	if m != nil {
		return m.ExchangeCommission
	}
	return nil
}

func (m *BrokerReport) GetExchangeClearingCommission() *MoneyValue {
	if m != nil {
		return m.ExchangeClearingCommission
	}
	return nil
}

func (m *BrokerReport) GetRepoRate() *Quotation {
	if m != nil {
		return m.RepoRate
	}
	return nil
}

func (m *BrokerReport) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *BrokerReport) GetClearValueDate() *timestamp.Timestamp {
	if m != nil {
		return m.ClearValueDate
	}
	return nil
}

func (m *BrokerReport) GetSecValueDate() *timestamp.Timestamp {
	if m != nil {
		return m.SecValueDate
	}
	return nil
}

func (m *BrokerReport) GetBrokerStatus() string {
	if m != nil {
		return m.BrokerStatus
	}
	return ""
}

func (m *BrokerReport) GetSeparateAgreementType() string {
	if m != nil {
		return m.SeparateAgreementType
	}
	return ""
}

func (m *BrokerReport) GetSeparateAgreementNumber() string {
	if m != nil {
		return m.SeparateAgreementNumber
	}
	return ""
}

func (m *BrokerReport) GetSeparateAgreementDate() string {
	if m != nil {
		return m.SeparateAgreementDate
	}
	return ""
}

func (m *BrokerReport) GetDeliveryType() string {
	if m != nil {
		return m.DeliveryType
	}
	return ""
}

type GetDividendsForeignIssuerRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*GetDividendsForeignIssuerRequest_GenerateDivForeignIssuerReport
	//	*GetDividendsForeignIssuerRequest_GetDivForeignIssuerReport
	Payload              isGetDividendsForeignIssuerRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *GetDividendsForeignIssuerRequest) Reset()         { *m = GetDividendsForeignIssuerRequest{} }
func (m *GetDividendsForeignIssuerRequest) String() string { return proto.CompactTextString(m) }
func (*GetDividendsForeignIssuerRequest) ProtoMessage()    {}
func (*GetDividendsForeignIssuerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{20}
}

func (m *GetDividendsForeignIssuerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDividendsForeignIssuerRequest.Unmarshal(m, b)
}
func (m *GetDividendsForeignIssuerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDividendsForeignIssuerRequest.Marshal(b, m, deterministic)
}
func (m *GetDividendsForeignIssuerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDividendsForeignIssuerRequest.Merge(m, src)
}
func (m *GetDividendsForeignIssuerRequest) XXX_Size() int {
	return xxx_messageInfo_GetDividendsForeignIssuerRequest.Size(m)
}
func (m *GetDividendsForeignIssuerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDividendsForeignIssuerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDividendsForeignIssuerRequest proto.InternalMessageInfo

type isGetDividendsForeignIssuerRequest_Payload interface {
	isGetDividendsForeignIssuerRequest_Payload()
}

type GetDividendsForeignIssuerRequest_GenerateDivForeignIssuerReport struct {
	GenerateDivForeignIssuerReport *GenerateDividendsForeignIssuerReportRequest `protobuf:"bytes,1,opt,name=generate_div_foreign_issuer_report,json=generateDivForeignIssuerReport,proto3,oneof"`
}

type GetDividendsForeignIssuerRequest_GetDivForeignIssuerReport struct {
	GetDivForeignIssuerReport *GetDividendsForeignIssuerReportRequest `protobuf:"bytes,2,opt,name=get_div_foreign_issuer_report,json=getDivForeignIssuerReport,proto3,oneof"`
}

func (*GetDividendsForeignIssuerRequest_GenerateDivForeignIssuerReport) isGetDividendsForeignIssuerRequest_Payload() {
}

func (*GetDividendsForeignIssuerRequest_GetDivForeignIssuerReport) isGetDividendsForeignIssuerRequest_Payload() {
}

func (m *GetDividendsForeignIssuerRequest) GetPayload() isGetDividendsForeignIssuerRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetDividendsForeignIssuerRequest) GetGenerateDivForeignIssuerReport() *GenerateDividendsForeignIssuerReportRequest {
	if x, ok := m.GetPayload().(*GetDividendsForeignIssuerRequest_GenerateDivForeignIssuerReport); ok {
		return x.GenerateDivForeignIssuerReport
	}
	return nil
}

func (m *GetDividendsForeignIssuerRequest) GetGetDivForeignIssuerReport() *GetDividendsForeignIssuerReportRequest {
	if x, ok := m.GetPayload().(*GetDividendsForeignIssuerRequest_GetDivForeignIssuerReport); ok {
		return x.GetDivForeignIssuerReport
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetDividendsForeignIssuerRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetDividendsForeignIssuerRequest_GenerateDivForeignIssuerReport)(nil),
		(*GetDividendsForeignIssuerRequest_GetDivForeignIssuerReport)(nil),
	}
}

type GetDividendsForeignIssuerResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*GetDividendsForeignIssuerResponse_GenerateDivForeignIssuerReportResponse
	//	*GetDividendsForeignIssuerResponse_DivForeignIssuerReport
	Payload              isGetDividendsForeignIssuerResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GetDividendsForeignIssuerResponse) Reset()         { *m = GetDividendsForeignIssuerResponse{} }
func (m *GetDividendsForeignIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*GetDividendsForeignIssuerResponse) ProtoMessage()    {}
func (*GetDividendsForeignIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{21}
}

func (m *GetDividendsForeignIssuerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDividendsForeignIssuerResponse.Unmarshal(m, b)
}
func (m *GetDividendsForeignIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDividendsForeignIssuerResponse.Marshal(b, m, deterministic)
}
func (m *GetDividendsForeignIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDividendsForeignIssuerResponse.Merge(m, src)
}
func (m *GetDividendsForeignIssuerResponse) XXX_Size() int {
	return xxx_messageInfo_GetDividendsForeignIssuerResponse.Size(m)
}
func (m *GetDividendsForeignIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDividendsForeignIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDividendsForeignIssuerResponse proto.InternalMessageInfo

type isGetDividendsForeignIssuerResponse_Payload interface {
	isGetDividendsForeignIssuerResponse_Payload()
}

type GetDividendsForeignIssuerResponse_GenerateDivForeignIssuerReportResponse struct {
	GenerateDivForeignIssuerReportResponse *GenerateDividendsForeignIssuerReportResponse `protobuf:"bytes,1,opt,name=generate_div_foreign_issuer_report_response,json=generateDivForeignIssuerReportResponse,proto3,oneof"`
}

type GetDividendsForeignIssuerResponse_DivForeignIssuerReport struct {
	DivForeignIssuerReport *GetDividendsForeignIssuerReportResponse `protobuf:"bytes,2,opt,name=div_foreign_issuer_report,json=divForeignIssuerReport,proto3,oneof"`
}

func (*GetDividendsForeignIssuerResponse_GenerateDivForeignIssuerReportResponse) isGetDividendsForeignIssuerResponse_Payload() {
}

func (*GetDividendsForeignIssuerResponse_DivForeignIssuerReport) isGetDividendsForeignIssuerResponse_Payload() {
}

func (m *GetDividendsForeignIssuerResponse) GetPayload() isGetDividendsForeignIssuerResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetDividendsForeignIssuerResponse) GetGenerateDivForeignIssuerReportResponse() *GenerateDividendsForeignIssuerReportResponse {
	if x, ok := m.GetPayload().(*GetDividendsForeignIssuerResponse_GenerateDivForeignIssuerReportResponse); ok {
		return x.GenerateDivForeignIssuerReportResponse
	}
	return nil
}

func (m *GetDividendsForeignIssuerResponse) GetDivForeignIssuerReport() *GetDividendsForeignIssuerReportResponse {
	if x, ok := m.GetPayload().(*GetDividendsForeignIssuerResponse_DivForeignIssuerReport); ok {
		return x.DivForeignIssuerReport
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetDividendsForeignIssuerResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetDividendsForeignIssuerResponse_GenerateDivForeignIssuerReportResponse)(nil),
		(*GetDividendsForeignIssuerResponse_DivForeignIssuerReport)(nil),
	}
}

//Объект запроса формирования отчёта "Справка о доходах за пределами РФ".
type GenerateDividendsForeignIssuerReportRequest struct {
	AccountId            string               `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GenerateDividendsForeignIssuerReportRequest) Reset() {
	*m = GenerateDividendsForeignIssuerReportRequest{}
}
func (m *GenerateDividendsForeignIssuerReportRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GenerateDividendsForeignIssuerReportRequest) ProtoMessage() {}
func (*GenerateDividendsForeignIssuerReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{22}
}

func (m *GenerateDividendsForeignIssuerReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest.Unmarshal(m, b)
}
func (m *GenerateDividendsForeignIssuerReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest.Marshal(b, m, deterministic)
}
func (m *GenerateDividendsForeignIssuerReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest.Merge(m, src)
}
func (m *GenerateDividendsForeignIssuerReportRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest.Size(m)
}
func (m *GenerateDividendsForeignIssuerReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateDividendsForeignIssuerReportRequest proto.InternalMessageInfo

func (m *GenerateDividendsForeignIssuerReportRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GenerateDividendsForeignIssuerReportRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GenerateDividendsForeignIssuerReportRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

// Объект запроса сформированного отчёта "Справка о доходах за пределами РФ".
type GetDividendsForeignIssuerReportRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDividendsForeignIssuerReportRequest) Reset() {
	*m = GetDividendsForeignIssuerReportRequest{}
}
func (m *GetDividendsForeignIssuerReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetDividendsForeignIssuerReportRequest) ProtoMessage()    {}
func (*GetDividendsForeignIssuerReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{23}
}

func (m *GetDividendsForeignIssuerReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDividendsForeignIssuerReportRequest.Unmarshal(m, b)
}
func (m *GetDividendsForeignIssuerReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDividendsForeignIssuerReportRequest.Marshal(b, m, deterministic)
}
func (m *GetDividendsForeignIssuerReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDividendsForeignIssuerReportRequest.Merge(m, src)
}
func (m *GetDividendsForeignIssuerReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetDividendsForeignIssuerReportRequest.Size(m)
}
func (m *GetDividendsForeignIssuerReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDividendsForeignIssuerReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDividendsForeignIssuerReportRequest proto.InternalMessageInfo

func (m *GetDividendsForeignIssuerReportRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *GetDividendsForeignIssuerReportRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

// Объект результата задачи запуска формирования отчёта "Справка о доходах за пределами РФ".
type GenerateDividendsForeignIssuerReportResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateDividendsForeignIssuerReportResponse) Reset() {
	*m = GenerateDividendsForeignIssuerReportResponse{}
}
func (m *GenerateDividendsForeignIssuerReportResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GenerateDividendsForeignIssuerReportResponse) ProtoMessage() {}
func (*GenerateDividendsForeignIssuerReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{24}
}

func (m *GenerateDividendsForeignIssuerReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse.Unmarshal(m, b)
}
func (m *GenerateDividendsForeignIssuerReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse.Marshal(b, m, deterministic)
}
func (m *GenerateDividendsForeignIssuerReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse.Merge(m, src)
}
func (m *GenerateDividendsForeignIssuerReportResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse.Size(m)
}
func (m *GenerateDividendsForeignIssuerReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateDividendsForeignIssuerReportResponse proto.InternalMessageInfo

func (m *GenerateDividendsForeignIssuerReportResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetDividendsForeignIssuerReportResponse struct {
	DividendsForeignIssuerReport []*DividendsForeignIssuerReport `protobuf:"bytes,1,rep,name=dividends_foreign_issuer_report,json=dividendsForeignIssuerReport,proto3" json:"dividends_foreign_issuer_report,omitempty"`
	ItemsCount                   int32                           `protobuf:"varint,2,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
	PagesCount                   int32                           `protobuf:"varint,3,opt,name=pagesCount,proto3" json:"pagesCount,omitempty"`
	Page                         int32                           `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                        `json:"-"`
	XXX_unrecognized             []byte                          `json:"-"`
	XXX_sizecache                int32                           `json:"-"`
}

func (m *GetDividendsForeignIssuerReportResponse) Reset() {
	*m = GetDividendsForeignIssuerReportResponse{}
}
func (m *GetDividendsForeignIssuerReportResponse) String() string { return proto.CompactTextString(m) }
func (*GetDividendsForeignIssuerReportResponse) ProtoMessage()    {}
func (*GetDividendsForeignIssuerReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{25}
}

func (m *GetDividendsForeignIssuerReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDividendsForeignIssuerReportResponse.Unmarshal(m, b)
}
func (m *GetDividendsForeignIssuerReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDividendsForeignIssuerReportResponse.Marshal(b, m, deterministic)
}
func (m *GetDividendsForeignIssuerReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDividendsForeignIssuerReportResponse.Merge(m, src)
}
func (m *GetDividendsForeignIssuerReportResponse) XXX_Size() int {
	return xxx_messageInfo_GetDividendsForeignIssuerReportResponse.Size(m)
}
func (m *GetDividendsForeignIssuerReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDividendsForeignIssuerReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDividendsForeignIssuerReportResponse proto.InternalMessageInfo

func (m *GetDividendsForeignIssuerReportResponse) GetDividendsForeignIssuerReport() []*DividendsForeignIssuerReport {
	if m != nil {
		return m.DividendsForeignIssuerReport
	}
	return nil
}

func (m *GetDividendsForeignIssuerReportResponse) GetItemsCount() int32 {
	if m != nil {
		return m.ItemsCount
	}
	return 0
}

func (m *GetDividendsForeignIssuerReportResponse) GetPagesCount() int32 {
	if m != nil {
		return m.PagesCount
	}
	return 0
}

func (m *GetDividendsForeignIssuerReportResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

// Отчёт "Справка о доходах за пределами РФ".
type DividendsForeignIssuerReport struct {
	RecordDate           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"`
	PaymentDate          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	SecurityName         string               `protobuf:"bytes,3,opt,name=security_name,json=securityName,proto3" json:"security_name,omitempty"`
	Isin                 string               `protobuf:"bytes,4,opt,name=isin,proto3" json:"isin,omitempty"`
	IssuerCountry        string               `protobuf:"bytes,5,opt,name=issuer_country,json=issuerCountry,proto3" json:"issuer_country,omitempty"`
	Quantity             int64                `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Dividend             *Quotation           `protobuf:"bytes,7,opt,name=dividend,proto3" json:"dividend,omitempty"`
	ExternalCommission   *Quotation           `protobuf:"bytes,8,opt,name=external_commission,json=externalCommission,proto3" json:"external_commission,omitempty"`
	DividendGross        *Quotation           `protobuf:"bytes,9,opt,name=dividend_gross,json=dividendGross,proto3" json:"dividend_gross,omitempty"`
	Tax                  *Quotation           `protobuf:"bytes,10,opt,name=tax,proto3" json:"tax,omitempty"`
	DividendAmount       *Quotation           `protobuf:"bytes,11,opt,name=dividend_amount,json=dividendAmount,proto3" json:"dividend_amount,omitempty"`
	Currency             string               `protobuf:"bytes,12,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DividendsForeignIssuerReport) Reset()         { *m = DividendsForeignIssuerReport{} }
func (m *DividendsForeignIssuerReport) String() string { return proto.CompactTextString(m) }
func (*DividendsForeignIssuerReport) ProtoMessage()    {}
func (*DividendsForeignIssuerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{26}
}

func (m *DividendsForeignIssuerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DividendsForeignIssuerReport.Unmarshal(m, b)
}
func (m *DividendsForeignIssuerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DividendsForeignIssuerReport.Marshal(b, m, deterministic)
}
func (m *DividendsForeignIssuerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DividendsForeignIssuerReport.Merge(m, src)
}
func (m *DividendsForeignIssuerReport) XXX_Size() int {
	return xxx_messageInfo_DividendsForeignIssuerReport.Size(m)
}
func (m *DividendsForeignIssuerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_DividendsForeignIssuerReport.DiscardUnknown(m)
}

var xxx_messageInfo_DividendsForeignIssuerReport proto.InternalMessageInfo

func (m *DividendsForeignIssuerReport) GetRecordDate() *timestamp.Timestamp {
	if m != nil {
		return m.RecordDate
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetPaymentDate() *timestamp.Timestamp {
	if m != nil {
		return m.PaymentDate
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetSecurityName() string {
	if m != nil {
		return m.SecurityName
	}
	return ""
}

func (m *DividendsForeignIssuerReport) GetIsin() string {
	if m != nil {
		return m.Isin
	}
	return ""
}

func (m *DividendsForeignIssuerReport) GetIssuerCountry() string {
	if m != nil {
		return m.IssuerCountry
	}
	return ""
}

func (m *DividendsForeignIssuerReport) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *DividendsForeignIssuerReport) GetDividend() *Quotation {
	if m != nil {
		return m.Dividend
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetExternalCommission() *Quotation {
	if m != nil {
		return m.ExternalCommission
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetDividendGross() *Quotation {
	if m != nil {
		return m.DividendGross
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetTax() *Quotation {
	if m != nil {
		return m.Tax
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetDividendAmount() *Quotation {
	if m != nil {
		return m.DividendAmount
	}
	return nil
}

func (m *DividendsForeignIssuerReport) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func init() {
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.OperationState", OperationState_name, OperationState_value)
	proto.RegisterEnum("tinkoff.public.invest.api.contract.v1.OperationType", OperationType_name, OperationType_value)
	proto.RegisterType((*OperationsRequest)(nil), "tinkoff.public.invest.api.contract.v1.OperationsRequest")
	proto.RegisterType((*OperationsResponse)(nil), "tinkoff.public.invest.api.contract.v1.OperationsResponse")
	proto.RegisterType((*Operation)(nil), "tinkoff.public.invest.api.contract.v1.Operation")
	proto.RegisterType((*OperationTrade)(nil), "tinkoff.public.invest.api.contract.v1.OperationTrade")
	proto.RegisterType((*PortfolioRequest)(nil), "tinkoff.public.invest.api.contract.v1.PortfolioRequest")
	proto.RegisterType((*PortfolioResponse)(nil), "tinkoff.public.invest.api.contract.v1.PortfolioResponse")
	proto.RegisterType((*PositionsRequest)(nil), "tinkoff.public.invest.api.contract.v1.PositionsRequest")
	proto.RegisterType((*PositionsResponse)(nil), "tinkoff.public.invest.api.contract.v1.PositionsResponse")
	proto.RegisterType((*WithdrawLimitsRequest)(nil), "tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest")
	proto.RegisterType((*WithdrawLimitsResponse)(nil), "tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse")
	proto.RegisterType((*PortfolioPosition)(nil), "tinkoff.public.invest.api.contract.v1.PortfolioPosition")
	proto.RegisterType((*PositionsSecurities)(nil), "tinkoff.public.invest.api.contract.v1.PositionsSecurities")
	proto.RegisterType((*PositionsFutures)(nil), "tinkoff.public.invest.api.contract.v1.PositionsFutures")
	proto.RegisterType((*BrokerReportRequest)(nil), "tinkoff.public.invest.api.contract.v1.BrokerReportRequest")
	proto.RegisterType((*BrokerReportResponse)(nil), "tinkoff.public.invest.api.contract.v1.BrokerReportResponse")
	proto.RegisterType((*GenerateBrokerReportRequest)(nil), "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest")
	proto.RegisterType((*GenerateBrokerReportResponse)(nil), "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse")
	proto.RegisterType((*GetBrokerReportRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest")
	proto.RegisterType((*GetBrokerReportResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse")
	proto.RegisterType((*BrokerReport)(nil), "tinkoff.public.invest.api.contract.v1.BrokerReport")
	proto.RegisterType((*GetDividendsForeignIssuerRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest")
	proto.RegisterType((*GetDividendsForeignIssuerResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse")
	proto.RegisterType((*GenerateDividendsForeignIssuerReportRequest)(nil), "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest")
	proto.RegisterType((*GetDividendsForeignIssuerReportRequest)(nil), "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest")
	proto.RegisterType((*GenerateDividendsForeignIssuerReportResponse)(nil), "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse")
	proto.RegisterType((*GetDividendsForeignIssuerReportResponse)(nil), "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse")
	proto.RegisterType((*DividendsForeignIssuerReport)(nil), "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport")
}

func init() {
	proto.RegisterFile("operations.proto", fileDescriptor_1b4a5877375e491e)
}

var fileDescriptor_1b4a5877375e491e = []byte{
	// 2842 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcf, 0x6f, 0x1b, 0xc7,
	0xf5, 0xcf, 0x52, 0xd6, 0x0f, 0x3e, 0x51, 0xf4, 0x6a, 0x24, 0x4b, 0x14, 0x25, 0xdb, 0x32, 0x1d,
	0xdb, 0x8a, 0x9d, 0x2f, 0xf3, 0xb5, 0xd3, 0xc6, 0x69, 0xdc, 0x14, 0xa5, 0xc8, 0x15, 0x4d, 0x98,
	0x22, 0x99, 0x25, 0x29, 0x5b, 0x49, 0xda, 0xc5, 0x6a, 0x77, 0xc8, 0x2c, 0x44, 0xee, 0x32, 0xbb,
	0x43, 0xd5, 0x2a, 0xd0, 0x43, 0x81, 0x5e, 0x9a, 0x16, 0xfd, 0x71, 0x28, 0xd0, 0x63, 0xd1, 0x53,
	0xd0, 0x43, 0x0b, 0x14, 0x28, 0xd0, 0x73, 0x2f, 0x45, 0xf3, 0x2f, 0xf4, 0xda, 0x7b, 0x51, 0xf4,
	0x1f, 0x28, 0x66, 0x76, 0x76, 0xb9, 0x64, 0x96, 0x14, 0xb9, 0x72, 0x91, 0xde, 0xb8, 0xf3, 0xde,
	0xfb, 0xbc, 0x37, 0xef, 0xbd, 0x79, 0xf3, 0x66, 0x86, 0x20, 0x5a, 0x3d, 0x6c, 0xab, 0xc4, 0xb0,
	0x4c, 0x27, 0xdb, 0xb3, 0x2d, 0x62, 0xa1, 0x3b, 0xc4, 0x30, 0x4f, 0xad, 0x56, 0x2b, 0xdb, 0xeb,
	0x9f, 0x74, 0x0c, 0x2d, 0x6b, 0x98, 0x67, 0xd8, 0x21, 0x59, 0xb5, 0x67, 0x64, 0x35, 0xcb, 0x24,
	0xb6, 0xaa, 0x91, 0xec, 0xd9, 0xc3, 0xf4, 0xcd, 0xb6, 0x65, 0xb5, 0x3b, 0xf8, 0x2d, 0x26, 0x74,
	0xd2, 0x6f, 0xbd, 0x45, 0x8c, 0x2e, 0x76, 0x88, 0xda, 0xed, 0xb9, 0x38, 0xe9, 0x84, 0x66, 0x75,
	0xbb, 0x96, 0xe9, 0x7e, 0x65, 0xfe, 0x29, 0xc0, 0x6a, 0xd5, 0x57, 0x25, 0xe3, 0x4f, 0xfb, 0xd8,
	0x21, 0xe8, 0x3a, 0x80, 0xaa, 0x69, 0x56, 0xdf, 0x24, 0x8a, 0xa1, 0xa7, 0x84, 0x5d, 0x61, 0x2f,
	0x2e, 0xc7, 0xf9, 0x48, 0x49, 0x47, 0x59, 0xb8, 0xd2, 0xb2, 0xad, 0x6e, 0x2a, 0xb6, 0x2b, 0xec,
	0x2d, 0x3f, 0x4a, 0x67, 0x5d, 0x95, 0x59, 0x4f, 0x65, 0xb6, 0xe1, 0xa9, 0x94, 0x19, 0x1f, 0xba,
	0x0f, 0x31, 0x62, 0xa5, 0xe6, 0x2e, 0xe4, 0x8e, 0x11, 0x0b, 0x3d, 0x83, 0x79, 0x87, 0xa8, 0x04,
	0xa7, 0xae, 0xec, 0x0a, 0x7b, 0xc9, 0x47, 0x5f, 0xcf, 0x4e, 0x35, 0xed, 0xac, 0x3f, 0x87, 0x3a,
	0x15, 0x96, 0x5d, 0x0c, 0x84, 0xe0, 0x4a, 0xcb, 0x68, 0x1b, 0xa9, 0x79, 0x36, 0x03, 0xf6, 0x3b,
	0xd3, 0x02, 0x14, 0x9c, 0xb0, 0xd3, 0xb3, 0x4c, 0x07, 0xa3, 0x1a, 0xc0, 0xc0, 0xe3, 0x29, 0x61,
	0x77, 0x6e, 0x6f, 0xf9, 0xd1, 0xff, 0xcf, 0xaa, 0x5b, 0x0e, 0x60, 0x64, 0xfe, 0x3c, 0x0f, 0x71,
	0x9f, 0x82, 0x92, 0x10, 0xf3, 0x3d, 0x19, 0x33, 0xa8, 0x0b, 0xd7, 0x7a, 0xaa, 0x8d, 0x4d, 0xa2,
	0xf8, 0x22, 0xd4, 0xd5, 0x31, 0xc6, 0xb0, 0xea, 0x92, 0x7c, 0xe9, 0x92, 0x8e, 0xd2, 0xb0, 0xa4,
	0xf5, 0x6d, 0x1b, 0x9b, 0xda, 0x39, 0x73, 0x64, 0x5c, 0xf6, 0xbf, 0xd1, 0x33, 0x58, 0xec, 0xa9,
	0xe7, 0x5d, 0x6c, 0x12, 0xe6, 0xb4, 0xe5, 0x47, 0x0f, 0xa7, 0x34, 0xfc, 0xd0, 0x32, 0xf1, 0xf9,
	0x91, 0xda, 0xe9, 0x63, 0xd9, 0x43, 0x40, 0x45, 0x98, 0xef, 0xd9, 0x86, 0x86, 0x99, 0xcf, 0x22,
	0x41, 0xb9, 0xf2, 0x83, 0x40, 0x2e, 0xbc, 0x82, 0x40, 0xa6, 0x61, 0xe9, 0xd3, 0xbe, 0x6a, 0x12,
	0x83, 0x9c, 0xa7, 0x16, 0x77, 0x85, 0xbd, 0x39, 0xd9, 0xff, 0x46, 0xb7, 0x61, 0xc5, 0xfb, 0xad,
	0xd8, 0xd8, 0x21, 0xa9, 0x25, 0xc6, 0x90, 0xf0, 0x06, 0x65, 0x9a, 0xd1, 0x5e, 0x26, 0xc4, 0x07,
	0x99, 0x80, 0xee, 0xc1, 0x55, 0xc3, 0x74, 0x88, 0xdd, 0xa7, 0x13, 0x57, 0xc8, 0x79, 0x0f, 0xa7,
	0x80, 0x91, 0x93, 0x83, 0xe1, 0xc6, 0x79, 0x0f, 0xd3, 0x7c, 0xd7, 0xe9, 0x4c, 0x96, 0x2f, 0xce,
	0x77, 0x9d, 0xa7, 0x1d, 0x43, 0x4b, 0xb8, 0xca, 0xe8, 0x6f, 0xf4, 0x11, 0x24, 0x07, 0x91, 0x66,
	0xd4, 0x15, 0xe6, 0x97, 0xaf, 0xcd, 0xea, 0x17, 0x6a, 0x91, 0xbc, 0x62, 0x05, 0x3f, 0xd1, 0x21,
	0x2c, 0x10, 0x5b, 0xd5, 0xb1, 0x93, 0x4a, 0xb2, 0xcc, 0x9d, 0xd9, 0xd9, 0x0d, 0x2a, 0x2d, 0x73,
	0x90, 0xcc, 0xdf, 0x04, 0x48, 0x0e, 0x93, 0xd0, 0x16, 0x2c, 0x31, 0xe2, 0xa0, 0x1e, 0x2c, 0xb2,
	0xef, 0x92, 0x8e, 0x1e, 0x43, 0x9c, 0xce, 0x5a, 0xa1, 0x85, 0x66, 0x8a, 0x92, 0xb0, 0x44, 0x99,
	0xe9, 0xe7, 0x50, 0x50, 0xe7, 0x46, 0x82, 0xea, 0xa7, 0xe1, 0x95, 0xcb, 0xa5, 0x61, 0xe6, 0x21,
	0x88, 0x35, 0xcb, 0x26, 0x2d, 0xab, 0x63, 0x58, 0xd3, 0x95, 0xb7, 0xcc, 0x9f, 0xe6, 0x61, 0x35,
	0x20, 0xc3, 0x2b, 0x84, 0x0a, 0x6b, 0xc4, 0x22, 0x6a, 0x47, 0x51, 0xbb, 0x4c, 0xd2, 0xf9, 0x44,
	0xb5, 0xb1, 0xc3, 0xa4, 0x23, 0xd9, 0xb7, 0xca, 0xd0, 0x72, 0x0c, 0xac, 0xce, 0xb0, 0x90, 0x02,
	0x68, 0x48, 0xc5, 0x89, 0x65, 0xea, 0x0e, 0x77, 0x69, 0x04, 0x0d, 0x62, 0x40, 0xc3, 0x3e, 0x85,
	0x42, 0x1f, 0x81, 0x38, 0xa4, 0x00, 0x93, 0x16, 0x2f, 0xcb, 0x11, 0xe0, 0x93, 0x01, 0x78, 0x89,
	0xb4, 0x90, 0x01, 0x9b, 0x43, 0xe0, 0xbc, 0x3e, 0x19, 0xd8, 0x89, 0x1e, 0xc4, 0x6b, 0x01, 0x1d,
	0x79, 0x1f, 0x0f, 0x69, 0xb0, 0x3e, 0xa4, 0xaa, 0xd5, 0x27, 0x7d, 0x1a, 0x8c, 0xc8, 0x35, 0x0b,
	0x05, 0xf4, 0x1c, 0xb8, 0x60, 0xe8, 0x39, 0x24, 0xf1, 0xcb, 0x1e, 0xd6, 0x08, 0xd6, 0x95, 0x73,
	0x03, 0x77, 0x74, 0x56, 0xc9, 0xa6, 0xdf, 0x16, 0x3e, 0xe8, 0x5b, 0xc4, 0xdd, 0x16, 0x56, 0x3c,
	0x9c, 0x63, 0x0a, 0x83, 0x8e, 0x20, 0xde, 0xb3, 0x1c, 0xc3, 0xdd, 0x6a, 0x16, 0xd9, 0x82, 0x7d,
	0x77, 0x4a, 0x4c, 0x3f, 0x2d, 0x6b, 0x1c, 0x40, 0x1e, 0x40, 0xb9, 0xa9, 0xce, 0x3f, 0xa6, 0x4c,
	0xf5, 0x5f, 0xcd, 0xd1, 0x54, 0xf7, 0x65, 0x78, 0xaa, 0x17, 0x61, 0xbe, 0x4b, 0x7d, 0xc3, 0xf7,
	0xc1, 0x28, 0x8b, 0x8f, 0xc9, 0xd3, 0x9d, 0xe9, 0xa4, 0x63, 0x69, 0xa7, 0x98, 0xee, 0x6c, 0x11,
	0xa1, 0x3c, 0x04, 0xf4, 0x21, 0x80, 0x83, 0xb5, 0xbe, 0x6d, 0x10, 0x9a, 0x52, 0x73, 0x0c, 0xef,
	0xbd, 0xa9, 0xfd, 0xc6, 0xe7, 0x58, 0xf7, 0x11, 0xe4, 0x00, 0x1a, 0x7a, 0x02, 0xe9, 0x8e, 0xd1,
	0x35, 0x88, 0xa3, 0x74, 0x2c, 0x55, 0x37, 0xcc, 0xb6, 0x62, 0x98, 0x4a, 0xcf, 0xb6, 0xda, 0x36,
	0x76, 0xdc, 0xf4, 0x5d, 0x92, 0x37, 0x5d, 0x8e, 0xb2, 0xcb, 0x50, 0x32, 0x6b, 0x9c, 0x8c, 0x3e,
	0x80, 0xc5, 0x41, 0x02, 0x52, 0xab, 0x1e, 0xcf, 0x6a, 0x15, 0x4f, 0x39, 0xd9, 0xc3, 0xc9, 0xbc,
	0x03, 0xd7, 0x9e, 0x1b, 0xe4, 0x13, 0xdd, 0x56, 0xbf, 0x57, 0x66, 0x5a, 0xa7, 0x8c, 0xe7, 0xcf,
	0x62, 0xb0, 0x31, 0x2a, 0xf8, 0x3f, 0x1d, 0xd4, 0xef, 0xc2, 0x2a, 0xff, 0xa9, 0xb4, 0xfb, 0xaa,
	0xad, 0x9a, 0x04, 0x63, 0x1e, 0xdb, 0x28, 0x15, 0x8f, 0x63, 0x15, 0x3d, 0xa8, 0xcc, 0x5f, 0x16,
	0x02, 0xb5, 0xdc, 0xf3, 0xb7, 0xdf, 0x0d, 0x08, 0x93, 0xbb, 0x81, 0x58, 0x68, 0x37, 0x50, 0x1e,
	0xd9, 0xb6, 0xa2, 0x54, 0x84, 0xc1, 0x46, 0xd7, 0x86, 0x0d, 0xf5, 0x0c, 0xdb, 0x6a, 0x1b, 0x2b,
	0xde, 0x4a, 0x56, 0x2e, 0xb9, 0xf3, 0xad, 0x73, 0x40, 0x6f, 0xba, 0x35, 0xd6, 0x8f, 0x7d, 0xb9,
	0x9c, 0xcd, 0xbf, 0x9a, 0x72, 0x26, 0xc3, 0xb2, 0x5b, 0xea, 0x89, 0x62, 0x9e, 0x7a, 0x45, 0x32,
	0x82, 0xd9, 0xc0, 0x51, 0x2a, 0xa7, 0x3a, 0x3a, 0x85, 0xad, 0x70, 0xaf, 0x28, 0x3d, 0xc2, 0x1a,
	0xc0, 0x28, 0x76, 0x6f, 0x84, 0xf9, 0xa5, 0x46, 0xd0, 0x11, 0xac, 0x78, 0x13, 0x70, 0x3d, 0xbf,
	0x14, 0x75, 0x0a, 0x09, 0x8e, 0xe3, 0x7a, 0xbc, 0x07, 0xdb, 0x63, 0x26, 0xd1, 0x32, 0x5a, 0x16,
	0x6b, 0x45, 0x23, 0x69, 0x49, 0x85, 0xcd, 0xe3, 0xc0, 0x68, 0x59, 0xa8, 0x19, 0x68, 0x85, 0x3b,
	0x16, 0x71, 0x58, 0x3f, 0x1b, 0xc5, 0x55, 0x7e, 0xf3, 0x5c, 0xb6, 0x88, 0x93, 0xf9, 0x0e, 0xac,
	0x85, 0x14, 0xd0, 0xd0, 0x55, 0x94, 0x0a, 0x16, 0x07, 0xda, 0xd2, 0xf9, 0x2b, 0x9d, 0x52, 0xd4,
	0x8e, 0x6a, 0x6a, 0x98, 0x37, 0x7b, 0xde, 0x67, 0xe6, 0xc3, 0xc0, 0xbe, 0xe5, 0x6d, 0xbe, 0xaf,
	0x0a, 0xfb, 0xf3, 0x18, 0xac, 0xed, 0xdb, 0xd6, 0x29, 0xb6, 0x65, 0xdc, 0xb3, 0x6c, 0xe2, 0xd5,
	0xd1, 0x1f, 0x0b, 0x70, 0xa3, 0x8d, 0x4d, 0xda, 0xe3, 0x62, 0xe5, 0x84, 0x31, 0x28, 0x36, 0xe3,
	0x50, 0x6c, 0x97, 0x85, 0x77, 0x76, 0xfb, 0x53, 0xfa, 0xae, 0xc8, 0xc1, 0x42, 0x94, 0x3d, 0x7d,
	0x4d, 0xde, 0x6e, 0x8f, 0x27, 0xa3, 0xef, 0xc3, 0x56, 0x1b, 0x93, 0x31, 0x56, 0xb8, 0xdd, 0xdf,
	0xfb, 0x53, 0x5b, 0x41, 0xc2, 0x0d, 0xd8, 0x68, 0x87, 0x52, 0xf6, 0xe3, 0xec, 0xec, 0x48, 0x37,
	0xbd, 0xcc, 0x1f, 0x62, 0xb0, 0x3e, 0xcc, 0xc2, 0x77, 0x8e, 0x9f, 0x0a, 0x70, 0x73, 0xac, 0xaf,
	0x5c, 0x1e, 0xee, 0xac, 0xfc, 0xa5, 0x9c, 0xe5, 0x42, 0x3d, 0x7d, 0x4d, 0xde, 0x69, 0x4f, 0xa0,
	0xa3, 0x1f, 0x40, 0x3a, 0xcc, 0x5d, 0xdc, 0x10, 0xd7, 0x5f, 0xdf, 0x8a, 0xea, 0x2f, 0xdf, 0x86,
	0xcd, 0x76, 0x38, 0x29, 0xe8, 0xb1, 0x5f, 0x0b, 0xb0, 0x3d, 0x21, 0xee, 0x5f, 0xe1, 0x35, 0x4a,
	0xe6, 0x31, 0xec, 0x4c, 0x72, 0x32, 0xda, 0x84, 0x45, 0xa2, 0x3a, 0xa7, 0x03, 0xbb, 0x16, 0xe8,
	0x67, 0x49, 0xcf, 0x48, 0xb0, 0x11, 0x9e, 0x44, 0x63, 0x45, 0xe8, 0x5a, 0xed, 0xa9, 0x6d, 0xd7,
	0xf5, 0xf3, 0x32, 0xfb, 0x9d, 0xf9, 0xab, 0x00, 0x9b, 0x63, 0x9c, 0x8b, 0x5e, 0xc0, 0xca, 0x50,
	0xf0, 0x78, 0x47, 0xf2, 0xf6, 0x94, 0x31, 0x1b, 0xc2, 0x4c, 0x9c, 0x04, 0xbe, 0xd0, 0x0d, 0x00,
	0x83, 0xe0, 0xae, 0x93, 0xa7, 0x1e, 0xe6, 0xf6, 0x04, 0x46, 0x28, 0x9d, 0x5a, 0xc7, 0xe9, 0x73,
	0x2e, 0x7d, 0x30, 0xe2, 0xcf, 0xe4, 0x4a, 0x60, 0x26, 0x5f, 0x2c, 0x43, 0x22, 0xa8, 0x72, 0xd2,
	0x51, 0x78, 0x0b, 0x96, 0x2c, 0x5b, 0xc7, 0xf6, 0xe0, 0x2a, 0x67, 0x91, 0x7d, 0xbb, 0x4e, 0x62,
	0x05, 0x6d, 0x2e, 0x50, 0xd0, 0x6e, 0x41, 0x02, 0xbf, 0xc4, 0x5a, 0x9f, 0x60, 0xc5, 0x31, 0xda,
	0x26, 0x53, 0x1b, 0x97, 0x97, 0xf9, 0x58, 0xdd, 0x68, 0x9b, 0x28, 0x07, 0x49, 0x57, 0x19, 0x3d,
	0x35, 0xb3, 0x13, 0xf6, 0xfc, 0x85, 0xf1, 0x5f, 0x61, 0x12, 0x05, 0x2e, 0x40, 0x8f, 0xd9, 0xf8,
	0xa5, 0xf6, 0x89, 0x6a, 0xb6, 0xdd, 0xbb, 0x98, 0xb8, 0xec, 0x7f, 0xd3, 0x0c, 0xd5, 0x3a, 0xaa,
	0xe3, 0x28, 0x9a, 0xa5, 0x63, 0xb6, 0xb1, 0xc6, 0xe5, 0x38, 0x1b, 0xc9, 0x5b, 0x3a, 0x46, 0x3b,
	0x10, 0xd7, 0x0d, 0x1b, 0x6b, 0xb4, 0x34, 0xb3, 0x5d, 0x31, 0x2e, 0x0f, 0x06, 0xe8, 0x94, 0x4c,
	0xb5, 0x8b, 0xbd, 0x3b, 0x15, 0xfa, 0x1b, 0x6d, 0xc0, 0x02, 0x31, 0xb4, 0x53, 0x6c, 0xf3, 0xab,
	0x14, 0xfe, 0x35, 0x38, 0xcf, 0x2f, 0x5f, 0xf2, 0x5a, 0x29, 0x78, 0x69, 0x90, 0x18, 0xb9, 0x34,
	0x68, 0x40, 0xc2, 0x75, 0xbf, 0x7b, 0x2c, 0x64, 0x37, 0x2c, 0x91, 0x74, 0x2d, 0x33, 0x18, 0xf7,
	0x38, 0x88, 0x0e, 0x21, 0xae, 0x6a, 0x86, 0x72, 0x46, 0x29, 0xa9, 0x64, 0xd4, 0x86, 0x4f, 0xd5,
	0x0c, 0x86, 0x3d, 0x38, 0xe4, 0x0f, 0x99, 0x7a, 0xf5, 0x72, 0x87, 0xfc, 0x6a, 0xc0, 0x5e, 0xda,
	0x52, 0xbb, 0xcb, 0x4b, 0xb3, 0xba, 0x5d, 0xc3, 0x71, 0x68, 0xf0, 0xc4, 0xc8, 0xf8, 0x2e, 0x56,
	0xde, 0x87, 0x42, 0x27, 0xb0, 0xe6, 0xe5, 0x4f, 0x50, 0xc3, 0x6a, 0xe4, 0xb3, 0xb7, 0x87, 0x16,
	0xd0, 0xe1, 0xc0, 0xce, 0x40, 0x47, 0x07, 0xab, 0x36, 0x3d, 0x92, 0x05, 0x94, 0xa1, 0xa8, 0xca,
	0xd2, 0xbe, 0x32, 0x8e, 0x1a, 0x50, 0x7a, 0x08, 0x71, 0x5a, 0x90, 0x14, 0x5a, 0x34, 0x53, 0x6b,
	0x51, 0x03, 0x4d, 0x21, 0x64, 0x95, 0x60, 0xb4, 0x0e, 0xf3, 0x3d, 0xd5, 0x26, 0xe7, 0xa9, 0x75,
	0xb6, 0x12, 0xdc, 0x0f, 0x54, 0x00, 0x91, 0x4d, 0xc8, 0xcd, 0x27, 0xb6, 0xac, 0x53, 0xd7, 0x2e,
	0x5c, 0xd2, 0x49, 0x26, 0xc3, 0xa6, 0x40, 0xd7, 0x35, 0xfa, 0x36, 0x24, 0x1d, 0xac, 0x05, 0x31,
	0x36, 0x2e, 0xc4, 0x48, 0x38, 0x58, 0x1b, 0x20, 0xdc, 0xf6, 0x8b, 0xb0, 0x43, 0x54, 0xd2, 0x77,
	0x52, 0x9b, 0xcc, 0x4a, 0x5e, 0x4f, 0xeb, 0x6c, 0x0c, 0xbd, 0x03, 0x9b, 0x0e, 0xee, 0xa9, 0x6c,
	0xe3, 0x57, 0xdb, 0x36, 0xc6, 0x83, 0xb3, 0x51, 0x8a, 0xb1, 0x5f, 0xf3, 0xc8, 0x39, 0x8f, 0xca,
	0x8e, 0x48, 0xef, 0xc1, 0x56, 0x88, 0x9c, 0xd9, 0xef, 0x9e, 0x60, 0x3b, 0xb5, 0xc5, 0x24, 0x37,
	0xbf, 0x24, 0x59, 0x61, 0xe4, 0x31, 0x3a, 0xd9, 0x1c, 0xd3, 0x63, 0x74, 0x7a, 0x13, 0xd2, 0x71,
	0xc7, 0x38, 0xc3, 0xf6, 0xb9, 0x6b, 0xe1, 0xb6, 0x3b, 0x21, 0x6f, 0x90, 0x1a, 0x96, 0xf9, 0x47,
	0x0c, 0x76, 0x8b, 0x98, 0x14, 0x8c, 0x33, 0x43, 0xc7, 0xa6, 0xee, 0x1c, 0x58, 0x36, 0x36, 0xda,
	0x66, 0xc9, 0x71, 0xfa, 0xb4, 0xbe, 0xbb, 0x1b, 0xdd, 0x6f, 0x04, 0xc8, 0xf8, 0xfd, 0x8e, 0x6e,
	0x9c, 0x29, 0x2d, 0x97, 0x4b, 0x31, 0x18, 0xdb, 0x60, 0xd7, 0xa2, 0x1e, 0x97, 0x67, 0x6c, 0x79,
	0xc6, 0xa9, 0x1e, 0x6e, 0xd7, 0xfc, 0xde, 0xb4, 0x60, 0x9c, 0x85, 0x30, 0xa2, 0x5f, 0x0a, 0x70,
	0x9d, 0x36, 0x41, 0xe3, 0xad, 0x73, 0x9b, 0x8a, 0xc3, 0xe9, 0xfb, 0xa0, 0xe9, 0x0c, 0xa3, 0x9d,
	0x6a, 0xb8, 0x4d, 0xc1, 0xc6, 0xe8, 0x5f, 0x31, 0xb8, 0x35, 0x01, 0x92, 0xf7, 0x01, 0x7f, 0x14,
	0xe0, 0xc1, 0xc5, 0x7e, 0x1e, 0xed, 0x31, 0xeb, 0xaf, 0xd4, 0xe1, 0x7e, 0xbf, 0x77, 0x77, 0xb2,
	0xc7, 0x7d, 0xa3, 0x7f, 0x22, 0xc0, 0xd6, 0x45, 0x5e, 0xaf, 0xbc, 0x2a, 0xaf, 0xfb, 0xd6, 0x6d,
	0xe8, 0x17, 0xfa, 0xfc, 0x73, 0x01, 0x1e, 0xcc, 0x90, 0x64, 0x5f, 0x65, 0x73, 0xda, 0x84, 0xbb,
	0xd3, 0x25, 0xdc, 0x6c, 0x3d, 0x67, 0x11, 0xde, 0x9c, 0x25, 0xe8, 0xe3, 0x7b, 0xe0, 0xcf, 0x62,
	0x70, 0x6f, 0xca, 0xd8, 0xa0, 0xcf, 0x04, 0xb8, 0xa9, 0x7b, 0x8c, 0x63, 0x2b, 0xc5, 0xdc, 0x0c,
	0x87, 0xa3, 0x89, 0x6a, 0x77, 0xf4, 0x09, 0xd4, 0xff, 0x4a, 0xff, 0xfb, 0xf7, 0x79, 0xd8, 0x99,
	0x64, 0x12, 0x7a, 0x02, 0xcb, 0x36, 0xd6, 0x2c, 0x5b, 0x77, 0x8b, 0xb4, 0x70, 0x61, 0x0a, 0x80,
	0xcb, 0xce, 0xaa, 0xf6, 0xfb, 0x90, 0xe0, 0x2f, 0x8f, 0xae, 0xf4, 0xc5, 0xe9, 0xb6, 0xcc, 0xf9,
	0xbd, 0xa2, 0xcf, 0x6f, 0x71, 0xcf, 0x15, 0xd6, 0x8b, 0xba, 0xed, 0x75, 0xc2, 0x1b, 0xac, 0xd0,
	0x9e, 0x14, 0xc1, 0x15, 0xc3, 0x31, 0xbc, 0xf6, 0x9a, 0xfd, 0x46, 0x77, 0x20, 0xc9, 0x63, 0xc4,
	0x12, 0xde, 0x3e, 0xe7, 0x6f, 0xc4, 0x2b, 0xee, 0x68, 0xde, 0x1d, 0x1c, 0xea, 0x36, 0x17, 0x46,
	0xba, 0xcd, 0x32, 0x2c, 0x79, 0xc1, 0x88, 0x7c, 0x25, 0xe5, 0x23, 0x20, 0x95, 0x76, 0x55, 0x04,
	0xdb, 0xa6, 0xda, 0x09, 0x36, 0x3a, 0x4b, 0x11, 0x81, 0x91, 0x07, 0x16, 0xe8, 0x6f, 0x9e, 0x43,
	0xd2, 0x53, 0xa7, 0xb4, 0x6d, 0xcb, 0x71, 0xf8, 0x15, 0x54, 0x84, 0x1b, 0x40, 0x0f, 0xa7, 0x48,
	0x61, 0xd0, 0x3e, 0xcc, 0x11, 0xf5, 0x65, 0xe4, 0xcb, 0x26, 0x2a, 0x8c, 0x8e, 0xe1, 0xaa, 0x6f,
	0x1c, 0xef, 0x89, 0x97, 0x23, 0xe2, 0xf9, 0xb3, 0xe4, 0x0d, 0x71, 0xf0, 0xed, 0x3c, 0x31, 0xfc,
	0x76, 0x7e, 0xbf, 0x1b, 0x78, 0xe9, 0x64, 0x2f, 0xce, 0xe8, 0x26, 0x6c, 0x57, 0x6b, 0x92, 0x9c,
	0x6b, 0x94, 0xaa, 0x15, 0xa5, 0xde, 0xc8, 0x35, 0x24, 0xa5, 0x59, 0xa9, 0xd7, 0xa4, 0x7c, 0xe9,
	0xa0, 0x24, 0x15, 0xc4, 0xd7, 0xd0, 0x0e, 0xa4, 0x46, 0x19, 0xa4, 0x17, 0x52, 0xbe, 0xd9, 0x90,
	0x0a, 0xa2, 0x10, 0x46, 0xcd, 0xe7, 0x2a, 0x79, 0xa9, 0x2c, 0x15, 0xc4, 0xd8, 0xfd, 0x9f, 0x27,
	0x60, 0x65, 0xe8, 0x25, 0x17, 0xdd, 0x80, 0xf4, 0x80, 0xbf, 0x71, 0x5c, 0x1b, 0xd5, 0x96, 0x82,
	0xf5, 0x11, 0x7a, 0xa9, 0x52, 0x6b, 0x36, 0x44, 0x01, 0x6d, 0xc3, 0xe6, 0x08, 0x65, 0xbf, 0x5a,
	0x29, 0x28, 0x8d, 0xdc, 0x0b, 0x31, 0x86, 0x5e, 0x87, 0xdd, 0x11, 0x62, 0xb5, 0xd9, 0xa8, 0x35,
	0x1b, 0x4a, 0x5d, 0xca, 0x37, 0xe5, 0x52, 0xa3, 0x24, 0xd5, 0xc5, 0xb9, 0x61, 0x63, 0x5d, 0xae,
	0x23, 0x49, 0xae, 0x94, 0x8a, 0x4f, 0x1b, 0xe2, 0x15, 0xb4, 0x01, 0x68, 0x84, 0x4a, 0xb1, 0xe7,
	0xd1, 0x5d, 0xc8, 0x84, 0x29, 0x96, 0xa5, 0x5a, 0xee, 0xf8, 0x50, 0xaa, 0x34, 0x94, 0x83, 0x66,
	0xb9, 0x2c, 0x2e, 0x84, 0xa0, 0xd7, 0xa5, 0x72, 0x59, 0xc9, 0xe7, 0xe4, 0x82, 0xb8, 0x38, 0xec,
	0x67, 0x46, 0x2d, 0x94, 0x8e, 0x4a, 0x05, 0x89, 0x4f, 0x61, 0x09, 0x6d, 0xc1, 0xb5, 0xd0, 0x29,
	0x88, 0x71, 0x74, 0x0b, 0xae, 0x4f, 0xb4, 0x40, 0x84, 0x10, 0x96, 0x46, 0xee, 0x85, 0x92, 0xaf,
	0xca, 0xb2, 0x94, 0xa7, 0x63, 0xe2, 0x72, 0x88, 0xeb, 0xeb, 0x92, 0x7c, 0x54, 0xca, 0x4b, 0xca,
	0x81, 0x24, 0x89, 0x89, 0x10, 0xfa, 0xbe, 0x54, 0x91, 0x0e, 0x4a, 0x0d, 0x66, 0xe0, 0x0a, 0xba,
	0x0e, 0x5b, 0x23, 0xf4, 0xc3, 0x9c, 0x5c, 0x2c, 0x55, 0x98, 0x78, 0x32, 0xc4, 0x7d, 0xfb, 0xcd,
	0x63, 0xf1, 0x6a, 0x58, 0xdc, 0x9a, 0xc7, 0xae, 0x57, 0x44, 0x74, 0x1b, 0x6e, 0x86, 0x85, 0x3b,
	0x18, 0xb6, 0xd5, 0x50, 0xc3, 0xcb, 0x65, 0xae, 0x5d, 0x44, 0x21, 0x86, 0xed, 0xcb, 0xd5, 0x67,
	0x92, 0xcc, 0x0c, 0x5b, 0x0b, 0x23, 0x37, 0x8f, 0x3d, 0xe9, 0xf5, 0x10, 0xfb, 0xbc, 0xc0, 0x88,
	0xd7, 0xd0, 0x26, 0xac, 0x85, 0xa8, 0x16, 0x37, 0x42, 0xa2, 0x95, 0xaf, 0x36, 0x6b, 0xd5, 0x8a,
	0xb8, 0x19, 0x66, 0x6e, 0x33, 0x9f, 0x97, 0xea, 0x75, 0x66, 0x4f, 0x2a, 0x24, 0x57, 0x07, 0x99,
	0x20, 0xe7, 0x2a, 0xf5, 0x03, 0x49, 0x16, 0xb7, 0xd0, 0x1d, 0xb8, 0x35, 0xc2, 0x95, 0xcb, 0xe7,
	0xe5, 0x66, 0xa9, 0x52, 0x54, 0x8e, 0x72, 0x32, 0xb7, 0x3e, 0x8d, 0xf6, 0xe0, 0xf5, 0x11, 0xb6,
	0xe7, 0xd4, 0x6f, 0x95, 0xa2, 0x52, 0x3d, 0x38, 0x08, 0x70, 0x6e, 0x87, 0x25, 0xa0, 0x54, 0x2e,
	0x1d, 0x49, 0xf2, 0x31, 0x0b, 0xd4, 0x0e, 0xda, 0x85, 0x9d, 0x71, 0x0c, 0x6c, 0xd2, 0xd7, 0x43,
	0x3c, 0xd9, 0x90, 0x73, 0xf9, 0x67, 0xca, 0x21, 0x9d, 0xd8, 0x8d, 0xb1, 0xe4, 0x1a, 0x25, 0xdf,
	0x44, 0x19, 0xb8, 0x11, 0x92, 0xa2, 0x35, 0xb9, 0x5a, 0x94, 0xa5, 0x7a, 0xbd, 0x74, 0x24, 0x89,
	0xbb, 0xe8, 0x1e, 0xdc, 0x1e, 0xb3, 0xc8, 0x87, 0x18, 0x6f, 0xa1, 0x07, 0x70, 0x6f, 0xc2, 0x72,
	0x1a, 0x62, 0xce, 0xa0, 0xfb, 0x70, 0x77, 0x7c, 0x66, 0x0f, 0xf1, 0xde, 0x46, 0xff, 0x07, 0x6f,
	0x4c, 0x5c, 0x48, 0x43, 0xec, 0xaf, 0x87, 0x18, 0x4c, 0xd9, 0x65, 0xa9, 0x56, 0x1d, 0x62, 0xbc,
	0x13, 0x92, 0x66, 0x1e, 0xa3, 0x78, 0x37, 0xc4, 0xf5, 0x3e, 0xca, 0xd3, 0x6a, 0xb9, 0x20, 0xde,
	0x1b, 0xe3, 0x3c, 0xc6, 0x21, 0x4b, 0x07, 0xcd, 0x4a, 0x41, 0xdc, 0x43, 0x6f, 0xc2, 0xde, 0x24,
	0x94, 0x21, 0x83, 0xde, 0x40, 0x59, 0xb8, 0x3f, 0x19, 0x71, 0x88, 0xff, 0x3e, 0x4a, 0xc3, 0xc6,
	0x97, 0x3d, 0xae, 0x48, 0x2f, 0x1a, 0xe2, 0x83, 0x90, 0x2c, 0x1c, 0x71, 0x1a, 0x5f, 0x1c, 0x6f,
	0x3e, 0xfa, 0xf7, 0x42, 0xf0, 0x0f, 0x78, 0x75, 0x6c, 0x9f, 0x19, 0x1a, 0x46, 0x3f, 0x12, 0x60,
	0xa5, 0x88, 0x07, 0xff, 0x00, 0x73, 0xd0, 0xbb, 0xb3, 0xfe, 0xa5, 0xc7, 0x7b, 0x32, 0x4e, 0x7f,
	0x23, 0x82, 0x24, 0x6f, 0x6e, 0x7f, 0x28, 0x40, 0xa2, 0x88, 0x89, 0xff, 0x80, 0x8a, 0x1e, 0xcf,
	0xfa, 0x3f, 0x05, 0xcf, 0x88, 0x77, 0x67, 0x17, 0x1c, 0xb5, 0x81, 0xbf, 0x10, 0xa1, 0x99, 0x5f,
	0xd7, 0x67, 0xb7, 0x61, 0xf4, 0x0f, 0x11, 0xbf, 0x10, 0x60, 0xb5, 0x88, 0xc9, 0xf0, 0xcb, 0x3a,
	0xfa, 0xe6, 0x94, 0x78, 0xa1, 0x2f, 0xf9, 0xe9, 0xf7, 0x23, 0x4a, 0x0f, 0xce, 0x1d, 0x57, 0x47,
	0x2e, 0xd8, 0xd1, 0x7b, 0x51, 0x6e, 0xd0, 0xb9, 0x39, 0x4f, 0x22, 0xc9, 0x72, 0x63, 0x7e, 0x2f,
	0xc0, 0xd6, 0xd8, 0x03, 0x13, 0x2a, 0x5e, 0xfe, 0x38, 0xec, 0xda, 0xf8, 0xf4, 0xf2, 0x40, 0xfc,
	0x11, 0x47, 0x85, 0x1d, 0xbb, 0x3f, 0x40, 0x33, 0x46, 0x10, 0x6a, 0xc2, 0x87, 0x89, 0xec, 0x5b,
	0x4f, 0x5c, 0x78, 0xb5, 0x67, 0xfc, 0x36, 0x36, 0xdf, 0x28, 0xe5, 0x6a, 0xa5, 0xdf, 0xc5, 0xd6,
	0x1b, 0x5c, 0xa6, 0xc4, 0x68, 0xb9, 0x9e, 0x91, 0x3d, 0x7a, 0xf8, 0x45, 0x6c, 0x95, 0x0f, 0x7f,
	0xec, 0x0e, 0x7f, 0x7c, 0xf4, 0xf0, 0x64, 0x81, 0x9d, 0x5d, 0xde, 0xfe, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xca, 0x7c, 0xd7, 0x64, 0xca, 0x2b, 0x00, 0x00,
}
